//
//SPDX-License-Identifier: MIT
//
//Copyright (c) 2023, SCANOSS
//
//Permission is hereby granted, free of charge, to any person obtaining a copy
//of this software and associated documentation files (the "Software"), to deal
//in the Software without restriction, including without limitation the rights
//to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//copies of the Software, and to permit persons to whom the Software is
//furnished to do so, subject to the following conditions:
//
//The above copyright notice and this permission notice shall be included in
//all copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//THE SOFTWARE.

//*
// Geo Provenance definition details

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: scanoss/api/geoprovenance/v2/scanoss-geoprovenance.proto

package geoprovenancev2

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	commonv2 "github.com/scanoss/papi/api/commonv2"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Component level Provenance Response data (JSON payload)
type ContributorResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Provenance details
	Purls []*ContributorResponse_Purls `protobuf:"bytes,1,rep,name=purls,proto3" json:"purls,omitempty"`
	// Response status
	Status        *commonv2.StatusResponse `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContributorResponse) Reset() {
	*x = ContributorResponse{}
	mi := &file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContributorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContributorResponse) ProtoMessage() {}

func (x *ContributorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContributorResponse.ProtoReflect.Descriptor instead.
func (*ContributorResponse) Descriptor() ([]byte, []int) {
	return file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_rawDescGZIP(), []int{0}
}

func (x *ContributorResponse) GetPurls() []*ContributorResponse_Purls {
	if x != nil {
		return x.Purls
	}
	return nil
}

func (x *ContributorResponse) GetStatus() *commonv2.StatusResponse {
	if x != nil {
		return x.Status
	}
	return nil
}

// *
// Component level Origin Response data (JSON payload)
type OriginResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Geo Provenance details
	Purls []*OriginResponse_Purls `protobuf:"bytes,1,rep,name=purls,proto3" json:"purls,omitempty"`
	// Response status
	Status        *commonv2.StatusResponse `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OriginResponse) Reset() {
	*x = OriginResponse{}
	mi := &file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OriginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OriginResponse) ProtoMessage() {}

func (x *OriginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OriginResponse.ProtoReflect.Descriptor instead.
func (*OriginResponse) Descriptor() ([]byte, []int) {
	return file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_rawDescGZIP(), []int{1}
}

func (x *OriginResponse) GetPurls() []*OriginResponse_Purls {
	if x != nil {
		return x.Purls
	}
	return nil
}

func (x *OriginResponse) GetStatus() *commonv2.StatusResponse {
	if x != nil {
		return x.Status
	}
	return nil
}

// Declared location for the project
type ContributorResponse_DeclaredLocation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Declared location could be either from the owner or a contributor
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Country/State/City/Province/Place declared on the repo
	Location      string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContributorResponse_DeclaredLocation) Reset() {
	*x = ContributorResponse_DeclaredLocation{}
	mi := &file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContributorResponse_DeclaredLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContributorResponse_DeclaredLocation) ProtoMessage() {}

func (x *ContributorResponse_DeclaredLocation) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContributorResponse_DeclaredLocation.ProtoReflect.Descriptor instead.
func (*ContributorResponse_DeclaredLocation) Descriptor() ([]byte, []int) {
	return file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ContributorResponse_DeclaredLocation) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ContributorResponse_DeclaredLocation) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

// Curated provenance information about the project
type ContributorResponse_CuratedLocation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Country for the owner or contributor
	Country string `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	// Occurrences for users or contributors of this specific country
	Count         int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContributorResponse_CuratedLocation) Reset() {
	*x = ContributorResponse_CuratedLocation{}
	mi := &file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContributorResponse_CuratedLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContributorResponse_CuratedLocation) ProtoMessage() {}

func (x *ContributorResponse_CuratedLocation) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContributorResponse_CuratedLocation.ProtoReflect.Descriptor instead.
func (*ContributorResponse_CuratedLocation) Descriptor() ([]byte, []int) {
	return file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ContributorResponse_CuratedLocation) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ContributorResponse_CuratedLocation) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Information about a given purl
type ContributorResponse_Purls struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The purl string
	Purl string `protobuf:"bytes,1,opt,name=purl,proto3" json:"purl,omitempty"`
	// List of locations declared on user repository
	DeclaredLocations []*ContributorResponse_DeclaredLocation `protobuf:"bytes,2,rep,name=declared_locations,json=declaredLocations,proto3" json:"declared_locations,omitempty"`
	// List of craft curated location
	CuratedLocations []*ContributorResponse_CuratedLocation `protobuf:"bytes,3,rep,name=curated_locations,json=curatedLocations,proto3" json:"curated_locations,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ContributorResponse_Purls) Reset() {
	*x = ContributorResponse_Purls{}
	mi := &file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContributorResponse_Purls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContributorResponse_Purls) ProtoMessage() {}

func (x *ContributorResponse_Purls) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContributorResponse_Purls.ProtoReflect.Descriptor instead.
func (*ContributorResponse_Purls) Descriptor() ([]byte, []int) {
	return file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ContributorResponse_Purls) GetPurl() string {
	if x != nil {
		return x.Purl
	}
	return ""
}

func (x *ContributorResponse_Purls) GetDeclaredLocations() []*ContributorResponse_DeclaredLocation {
	if x != nil {
		return x.DeclaredLocations
	}
	return nil
}

func (x *ContributorResponse_Purls) GetCuratedLocations() []*ContributorResponse_CuratedLocation {
	if x != nil {
		return x.CuratedLocations
	}
	return nil
}

// Origin country details
type OriginResponse_Location struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ISO Country code
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Percentage of developers
	Percentage    float32 `protobuf:"fixed32,2,opt,name=percentage,proto3" json:"percentage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OriginResponse_Location) Reset() {
	*x = OriginResponse_Location{}
	mi := &file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OriginResponse_Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OriginResponse_Location) ProtoMessage() {}

func (x *OriginResponse_Location) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OriginResponse_Location.ProtoReflect.Descriptor instead.
func (*OriginResponse_Location) Descriptor() ([]byte, []int) {
	return file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_rawDescGZIP(), []int{1, 0}
}

func (x *OriginResponse_Location) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OriginResponse_Location) GetPercentage() float32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

// Information about the given PURL
type OriginResponse_Purls struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The purl string
	Purl string `protobuf:"bytes,1,opt,name=purl,proto3" json:"purl,omitempty"`
	// The list of countries with contributors
	Locations     []*OriginResponse_Location `protobuf:"bytes,2,rep,name=locations,proto3" json:"locations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OriginResponse_Purls) Reset() {
	*x = OriginResponse_Purls{}
	mi := &file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OriginResponse_Purls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OriginResponse_Purls) ProtoMessage() {}

func (x *OriginResponse_Purls) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OriginResponse_Purls.ProtoReflect.Descriptor instead.
func (*OriginResponse_Purls) Descriptor() ([]byte, []int) {
	return file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_rawDescGZIP(), []int{1, 1}
}

func (x *OriginResponse_Purls) GetPurl() string {
	if x != nil {
		return x.Purl
	}
	return ""
}

func (x *OriginResponse_Purls) GetLocations() []*OriginResponse_Location {
	if x != nil {
		return x.Locations
	}
	return nil
}

var File_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto protoreflect.FileDescriptor

const file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_rawDesc = "" +
	"\n" +
	"8scanoss/api/geoprovenance/v2/scanoss-geoprovenance.proto\x12\x1cscanoss.api.geoprovenance.v2\x1a*scanoss/api/common/v2/scanoss-common.proto\x1a\x1cgoogle/api/annotations.proto\x1a,protoc-gen-swagger/options/annotations.proto\"\xab\x04\n" +
	"\x13ContributorResponse\x12M\n" +
	"\x05purls\x18\x01 \x03(\v27.scanoss.api.geoprovenance.v2.ContributorResponse.PurlsR\x05purls\x12=\n" +
	"\x06status\x18\x02 \x01(\v2%.scanoss.api.common.v2.StatusResponseR\x06status\x1aB\n" +
	"\x10DeclaredLocation\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x1a\n" +
	"\blocation\x18\x02 \x01(\tR\blocation\x1aA\n" +
	"\x0fCuratedLocation\x12\x18\n" +
	"\acountry\x18\x01 \x01(\tR\acountry\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\x1a\xfe\x01\n" +
	"\x05Purls\x12\x12\n" +
	"\x04purl\x18\x01 \x01(\tR\x04purl\x12q\n" +
	"\x12declared_locations\x18\x02 \x03(\v2B.scanoss.api.geoprovenance.v2.ContributorResponse.DeclaredLocationR\x11declaredLocations\x12n\n" +
	"\x11curated_locations\x18\x03 \x03(\v2A.scanoss.api.geoprovenance.v2.ContributorResponse.CuratedLocationR\x10curatedLocations\"\xcb\x02\n" +
	"\x0eOriginResponse\x12H\n" +
	"\x05purls\x18\x01 \x03(\v22.scanoss.api.geoprovenance.v2.OriginResponse.PurlsR\x05purls\x12=\n" +
	"\x06status\x18\x02 \x01(\v2%.scanoss.api.common.v2.StatusResponseR\x06status\x1a>\n" +
	"\bLocation\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1e\n" +
	"\n" +
	"percentage\x18\x02 \x01(\x02R\n" +
	"percentage\x1ap\n" +
	"\x05Purls\x12\x12\n" +
	"\x04purl\x18\x01 \x01(\tR\x04purl\x12S\n" +
	"\tlocations\x18\x02 \x03(\v25.scanoss.api.geoprovenance.v2.OriginResponse.LocationR\tlocations2\xb9\x03\n" +
	"\rGeoProvenance\x12v\n" +
	"\x04Echo\x12\".scanoss.api.common.v2.EchoRequest\x1a#.scanoss.api.common.v2.EchoResponse\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/api/v2/geoprovenance/echo\x12\x9d\x01\n" +
	"\x18GetComponentContributors\x12\".scanoss.api.common.v2.PurlRequest\x1a1.scanoss.api.geoprovenance.v2.ContributorResponse\"*\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/api/v2/geoprovenance/countries\x12\x8f\x01\n" +
	"\x12GetComponentOrigin\x12\".scanoss.api.common.v2.PurlRequest\x1a,.scanoss.api.geoprovenance.v2.OriginResponse\"'\x82\xd3\xe4\x93\x02!:\x01*\"\x1c/api/v2/geoprovenance/originB\xa4\x02\x92A\xe3\x01\x12}\n" +
	"\x1eSCANOSS GEO Provenance Service\"V\n" +
	"\x15scanoss-geoprovenance\x12(https://github.com/scanoss/geoprovenance\x1a\x13support@scanoss.com2\x032.0*\x01\x012\x10application/json:\x10application/jsonR;\n" +
	"\x03404\x124\n" +
	"*Returned when the resource does not exist.\x12\x06\n" +
	"\x04\x9a\x02\x01\aZ;github.com/scanoss/papi/api/geoprovenancev2;geoprovenancev2b\x06proto3"

var (
	file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_rawDescOnce sync.Once
	file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_rawDescData []byte
)

func file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_rawDescGZIP() []byte {
	file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_rawDescOnce.Do(func() {
		file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_rawDesc), len(file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_rawDesc)))
	})
	return file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_rawDescData
}

var file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_goTypes = []any{
	(*ContributorResponse)(nil),                  // 0: scanoss.api.geoprovenance.v2.ContributorResponse
	(*OriginResponse)(nil),                       // 1: scanoss.api.geoprovenance.v2.OriginResponse
	(*ContributorResponse_DeclaredLocation)(nil), // 2: scanoss.api.geoprovenance.v2.ContributorResponse.DeclaredLocation
	(*ContributorResponse_CuratedLocation)(nil),  // 3: scanoss.api.geoprovenance.v2.ContributorResponse.CuratedLocation
	(*ContributorResponse_Purls)(nil),            // 4: scanoss.api.geoprovenance.v2.ContributorResponse.Purls
	(*OriginResponse_Location)(nil),              // 5: scanoss.api.geoprovenance.v2.OriginResponse.Location
	(*OriginResponse_Purls)(nil),                 // 6: scanoss.api.geoprovenance.v2.OriginResponse.Purls
	(*commonv2.StatusResponse)(nil),              // 7: scanoss.api.common.v2.StatusResponse
	(*commonv2.EchoRequest)(nil),                 // 8: scanoss.api.common.v2.EchoRequest
	(*commonv2.PurlRequest)(nil),                 // 9: scanoss.api.common.v2.PurlRequest
	(*commonv2.EchoResponse)(nil),                // 10: scanoss.api.common.v2.EchoResponse
}
var file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_depIdxs = []int32{
	4,  // 0: scanoss.api.geoprovenance.v2.ContributorResponse.purls:type_name -> scanoss.api.geoprovenance.v2.ContributorResponse.Purls
	7,  // 1: scanoss.api.geoprovenance.v2.ContributorResponse.status:type_name -> scanoss.api.common.v2.StatusResponse
	6,  // 2: scanoss.api.geoprovenance.v2.OriginResponse.purls:type_name -> scanoss.api.geoprovenance.v2.OriginResponse.Purls
	7,  // 3: scanoss.api.geoprovenance.v2.OriginResponse.status:type_name -> scanoss.api.common.v2.StatusResponse
	2,  // 4: scanoss.api.geoprovenance.v2.ContributorResponse.Purls.declared_locations:type_name -> scanoss.api.geoprovenance.v2.ContributorResponse.DeclaredLocation
	3,  // 5: scanoss.api.geoprovenance.v2.ContributorResponse.Purls.curated_locations:type_name -> scanoss.api.geoprovenance.v2.ContributorResponse.CuratedLocation
	5,  // 6: scanoss.api.geoprovenance.v2.OriginResponse.Purls.locations:type_name -> scanoss.api.geoprovenance.v2.OriginResponse.Location
	8,  // 7: scanoss.api.geoprovenance.v2.GeoProvenance.Echo:input_type -> scanoss.api.common.v2.EchoRequest
	9,  // 8: scanoss.api.geoprovenance.v2.GeoProvenance.GetComponentContributors:input_type -> scanoss.api.common.v2.PurlRequest
	9,  // 9: scanoss.api.geoprovenance.v2.GeoProvenance.GetComponentOrigin:input_type -> scanoss.api.common.v2.PurlRequest
	10, // 10: scanoss.api.geoprovenance.v2.GeoProvenance.Echo:output_type -> scanoss.api.common.v2.EchoResponse
	0,  // 11: scanoss.api.geoprovenance.v2.GeoProvenance.GetComponentContributors:output_type -> scanoss.api.geoprovenance.v2.ContributorResponse
	1,  // 12: scanoss.api.geoprovenance.v2.GeoProvenance.GetComponentOrigin:output_type -> scanoss.api.geoprovenance.v2.OriginResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_init() }
func file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_init() {
	if File_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_rawDesc), len(file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_goTypes,
		DependencyIndexes: file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_depIdxs,
		MessageInfos:      file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_msgTypes,
	}.Build()
	File_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto = out.File
	file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_goTypes = nil
	file_scanoss_api_geoprovenance_v2_scanoss_geoprovenance_proto_depIdxs = nil
}
