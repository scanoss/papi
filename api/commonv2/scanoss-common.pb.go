//
//SPDX-License-Identifier: MIT
//
//Copyright (c) 2021-2025, SCANOSS
//
//Permission is hereby granted, free of charge, to any person obtaining a copy
//of this software and associated documentation files (the "Software"), to deal
//in the Software without restriction, including without limitation the rights
//to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//copies of the Software, and to permit persons to whom the Software is
//furnished to do so, subject to the following conditions:
//
//The above copyright notice and this permission notice shall be included in
//all copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//THE SOFTWARE.

//**
// Common definition details
//*

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: scanoss/api/common/v2/scanoss-common.proto

package commonv2

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Status code Enum
type StatusCode int32

const (
	StatusCode_UNSPECIFIED             StatusCode = 0
	StatusCode_SUCCESS                 StatusCode = 1
	StatusCode_SUCCEEDED_WITH_WARNINGS StatusCode = 2
	StatusCode_WARNING                 StatusCode = 3
	StatusCode_FAILED                  StatusCode = 4
)

// Enum value maps for StatusCode.
var (
	StatusCode_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "SUCCESS",
		2: "SUCCEEDED_WITH_WARNINGS",
		3: "WARNING",
		4: "FAILED",
	}
	StatusCode_value = map[string]int32{
		"UNSPECIFIED":             0,
		"SUCCESS":                 1,
		"SUCCEEDED_WITH_WARNINGS": 2,
		"WARNING":                 3,
		"FAILED":                  4,
	}
)

func (x StatusCode) Enum() *StatusCode {
	p := new(StatusCode)
	*p = x
	return p
}

func (x StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_scanoss_api_common_v2_scanoss_common_proto_enumTypes[0].Descriptor()
}

func (StatusCode) Type() protoreflect.EnumType {
	return &file_scanoss_api_common_v2_scanoss_common_proto_enumTypes[0]
}

func (x StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusCode.Descriptor instead.
func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_scanoss_api_common_v2_scanoss_common_proto_rawDescGZIP(), []int{0}
}

// Detailed response details
type StatusResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// response status
	Status StatusCode `protobuf:"varint,1,opt,name=status,proto3,enum=scanoss.api.common.v2.StatusCode" json:"status,omitempty"`
	// Status message
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_scanoss_api_common_v2_scanoss_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_common_v2_scanoss_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_scanoss_api_common_v2_scanoss_common_proto_rawDescGZIP(), []int{0}
}

func (x *StatusResponse) GetStatus() StatusCode {
	if x != nil {
		return x.Status
	}
	return StatusCode_UNSPECIFIED
}

func (x *StatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Echo Message Request
type EchoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EchoRequest) Reset() {
	*x = EchoRequest{}
	mi := &file_scanoss_api_common_v2_scanoss_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoRequest) ProtoMessage() {}

func (x *EchoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_common_v2_scanoss_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoRequest.ProtoReflect.Descriptor instead.
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return file_scanoss_api_common_v2_scanoss_common_proto_rawDescGZIP(), []int{1}
}

func (x *EchoRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Echo Message Response
type EchoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EchoResponse) Reset() {
	*x = EchoResponse{}
	mi := &file_scanoss_api_common_v2_scanoss_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoResponse) ProtoMessage() {}

func (x *EchoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_common_v2_scanoss_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoResponse.ProtoReflect.Descriptor instead.
func (*EchoResponse) Descriptor() ([]byte, []int) {
	return file_scanoss_api_common_v2_scanoss_common_proto_rawDescGZIP(), []int{2}
}

func (x *EchoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Represents a software component to be analyzed by SCANOSS API services.
// Combines a Package URL for component identification with optional version constraints for resolution.
type ComponentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Package URL identifying the component to analyze.
	Purl string `protobuf:"bytes,1,opt,name=purl,proto3" json:"purl,omitempty"`
	// Version constraint for component resolution when PURL lacks explicit version.
	Requirement   string `protobuf:"bytes,2,opt,name=requirement,proto3" json:"requirement,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComponentRequest) Reset() {
	*x = ComponentRequest{}
	mi := &file_scanoss_api_common_v2_scanoss_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComponentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentRequest) ProtoMessage() {}

func (x *ComponentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_common_v2_scanoss_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentRequest.ProtoReflect.Descriptor instead.
func (*ComponentRequest) Descriptor() ([]byte, []int) {
	return file_scanoss_api_common_v2_scanoss_common_proto_rawDescGZIP(), []int{3}
}

func (x *ComponentRequest) GetPurl() string {
	if x != nil {
		return x.Purl
	}
	return ""
}

func (x *ComponentRequest) GetRequirement() string {
	if x != nil {
		return x.Requirement
	}
	return ""
}

// Represents a list of software component to be analyzed by SCANOSS API services.
// Allows analysis of multiple software components in a single API call, improving performance over individual requests.
type ComponentsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Array of component requests to analyze
	Components    []*ComponentRequest `protobuf:"bytes,1,rep,name=components,proto3" json:"components,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComponentsRequest) Reset() {
	*x = ComponentsRequest{}
	mi := &file_scanoss_api_common_v2_scanoss_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComponentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentsRequest) ProtoMessage() {}

func (x *ComponentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_common_v2_scanoss_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentsRequest.ProtoReflect.Descriptor instead.
func (*ComponentsRequest) Descriptor() ([]byte, []int) {
	return file_scanoss_api_common_v2_scanoss_common_proto_rawDescGZIP(), []int{4}
}

func (x *ComponentsRequest) GetComponents() []*ComponentRequest {
	if x != nil {
		return x.Components
	}
	return nil
}

// Purl request data (JSON payload)
// WARNING: PurlRequest is deprecated, use ComponentsRequest instead.
type PurlRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// JSON request purls
	Purls         []*PurlRequest_Purls `protobuf:"bytes,1,rep,name=purls,proto3" json:"purls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PurlRequest) Reset() {
	*x = PurlRequest{}
	mi := &file_scanoss_api_common_v2_scanoss_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurlRequest) ProtoMessage() {}

func (x *PurlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_common_v2_scanoss_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurlRequest.ProtoReflect.Descriptor instead.
func (*PurlRequest) Descriptor() ([]byte, []int) {
	return file_scanoss_api_common_v2_scanoss_common_proto_rawDescGZIP(), []int{5}
}

func (x *PurlRequest) GetPurls() []*PurlRequest_Purls {
	if x != nil {
		return x.Purls
	}
	return nil
}

// Purl request data (JSON payload)
// Used by transitive dependencies request
type Purl struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @description: purl to be requested
	Purl          string `protobuf:"bytes,1,opt,name=purl,proto3" json:"purl,omitempty"`
	Requirement   string `protobuf:"bytes,2,opt,name=requirement,proto3" json:"requirement,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Purl) Reset() {
	*x = Purl{}
	mi := &file_scanoss_api_common_v2_scanoss_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Purl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Purl) ProtoMessage() {}

func (x *Purl) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_common_v2_scanoss_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Purl.ProtoReflect.Descriptor instead.
func (*Purl) Descriptor() ([]byte, []int) {
	return file_scanoss_api_common_v2_scanoss_common_proto_rawDescGZIP(), []int{6}
}

func (x *Purl) GetPurl() string {
	if x != nil {
		return x.Purl
	}
	return ""
}

func (x *Purl) GetRequirement() string {
	if x != nil {
		return x.Requirement
	}
	return ""
}

// TODO: Refactor this API
// - Remove nested Purls message and replace with top-level Purl message type.
// - Update field definition below to: repeated Purl purls = 1;
type PurlRequest_Purls struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @description: purl to be requested
	Purl          string `protobuf:"bytes,1,opt,name=purl,proto3" json:"purl,omitempty"`
	Requirement   string `protobuf:"bytes,2,opt,name=requirement,proto3" json:"requirement,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PurlRequest_Purls) Reset() {
	*x = PurlRequest_Purls{}
	mi := &file_scanoss_api_common_v2_scanoss_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurlRequest_Purls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurlRequest_Purls) ProtoMessage() {}

func (x *PurlRequest_Purls) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_common_v2_scanoss_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurlRequest_Purls.ProtoReflect.Descriptor instead.
func (*PurlRequest_Purls) Descriptor() ([]byte, []int) {
	return file_scanoss_api_common_v2_scanoss_common_proto_rawDescGZIP(), []int{5, 0}
}

func (x *PurlRequest_Purls) GetPurl() string {
	if x != nil {
		return x.Purl
	}
	return ""
}

func (x *PurlRequest_Purls) GetRequirement() string {
	if x != nil {
		return x.Requirement
	}
	return ""
}

var File_scanoss_api_common_v2_scanoss_common_proto protoreflect.FileDescriptor

const file_scanoss_api_common_v2_scanoss_common_proto_rawDesc = "" +
	"\n" +
	"*scanoss/api/common/v2/scanoss-common.proto\x12\x15scanoss.api.common.v2\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\"e\n" +
	"\x0eStatusResponse\x129\n" +
	"\x06status\x18\x01 \x01(\x0e2!.scanoss.api.common.v2.StatusCodeR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"'\n" +
	"\vEchoRequest\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"(\n" +
	"\fEchoResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"~\n" +
	"\x10ComponentRequest\x12\x17\n" +
	"\x04purl\x18\x01 \x01(\tB\x03\xe0A\x02R\x04purl\x12 \n" +
	"\vrequirement\x18\x02 \x01(\tR\vrequirement:/\x92A,2*{\"purl\":\"pkg:github/scanoss/engine@1.0.0\"}\"\xd4\x01\n" +
	"\x11ComponentsRequest\x12L\n" +
	"\n" +
	"components\x18\x01 \x03(\v2'.scanoss.api.common.v2.ComponentRequestB\x03\xe0A\x02R\n" +
	"components:q\x92An2l{\"components\":[{\"purl\":\"pkg:github/scanoss/engine@1.0.0\"},{\"purl\":\"pkg:github/scanoss/scanoss.py@v1.30.0\"}]}\"\x8c\x01\n" +
	"\vPurlRequest\x12>\n" +
	"\x05purls\x18\x01 \x03(\v2(.scanoss.api.common.v2.PurlRequest.PurlsR\x05purls\x1a=\n" +
	"\x05Purls\x12\x12\n" +
	"\x04purl\x18\x01 \x01(\tR\x04purl\x12 \n" +
	"\vrequirement\x18\x02 \x01(\tR\vrequirement\"<\n" +
	"\x04Purl\x12\x12\n" +
	"\x04purl\x18\x01 \x01(\tR\x04purl\x12 \n" +
	"\vrequirement\x18\x02 \x01(\tR\vrequirement*`\n" +
	"\n" +
	"StatusCode\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\v\n" +
	"\aSUCCESS\x10\x01\x12\x1b\n" +
	"\x17SUCCEEDED_WITH_WARNINGS\x10\x02\x12\v\n" +
	"\aWARNING\x10\x03\x12\n" +
	"\n" +
	"\x06FAILED\x10\x04B/Z-github.com/scanoss/papi/api/commonv2;commonv2b\x06proto3"

var (
	file_scanoss_api_common_v2_scanoss_common_proto_rawDescOnce sync.Once
	file_scanoss_api_common_v2_scanoss_common_proto_rawDescData []byte
)

func file_scanoss_api_common_v2_scanoss_common_proto_rawDescGZIP() []byte {
	file_scanoss_api_common_v2_scanoss_common_proto_rawDescOnce.Do(func() {
		file_scanoss_api_common_v2_scanoss_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_scanoss_api_common_v2_scanoss_common_proto_rawDesc), len(file_scanoss_api_common_v2_scanoss_common_proto_rawDesc)))
	})
	return file_scanoss_api_common_v2_scanoss_common_proto_rawDescData
}

var file_scanoss_api_common_v2_scanoss_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_scanoss_api_common_v2_scanoss_common_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_scanoss_api_common_v2_scanoss_common_proto_goTypes = []any{
	(StatusCode)(0),           // 0: scanoss.api.common.v2.StatusCode
	(*StatusResponse)(nil),    // 1: scanoss.api.common.v2.StatusResponse
	(*EchoRequest)(nil),       // 2: scanoss.api.common.v2.EchoRequest
	(*EchoResponse)(nil),      // 3: scanoss.api.common.v2.EchoResponse
	(*ComponentRequest)(nil),  // 4: scanoss.api.common.v2.ComponentRequest
	(*ComponentsRequest)(nil), // 5: scanoss.api.common.v2.ComponentsRequest
	(*PurlRequest)(nil),       // 6: scanoss.api.common.v2.PurlRequest
	(*Purl)(nil),              // 7: scanoss.api.common.v2.Purl
	(*PurlRequest_Purls)(nil), // 8: scanoss.api.common.v2.PurlRequest.Purls
}
var file_scanoss_api_common_v2_scanoss_common_proto_depIdxs = []int32{
	0, // 0: scanoss.api.common.v2.StatusResponse.status:type_name -> scanoss.api.common.v2.StatusCode
	4, // 1: scanoss.api.common.v2.ComponentsRequest.components:type_name -> scanoss.api.common.v2.ComponentRequest
	8, // 2: scanoss.api.common.v2.PurlRequest.purls:type_name -> scanoss.api.common.v2.PurlRequest.Purls
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_scanoss_api_common_v2_scanoss_common_proto_init() }
func file_scanoss_api_common_v2_scanoss_common_proto_init() {
	if File_scanoss_api_common_v2_scanoss_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_scanoss_api_common_v2_scanoss_common_proto_rawDesc), len(file_scanoss_api_common_v2_scanoss_common_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_scanoss_api_common_v2_scanoss_common_proto_goTypes,
		DependencyIndexes: file_scanoss_api_common_v2_scanoss_common_proto_depIdxs,
		EnumInfos:         file_scanoss_api_common_v2_scanoss_common_proto_enumTypes,
		MessageInfos:      file_scanoss_api_common_v2_scanoss_common_proto_msgTypes,
	}.Build()
	File_scanoss_api_common_v2_scanoss_common_proto = out.File
	file_scanoss_api_common_v2_scanoss_common_proto_goTypes = nil
	file_scanoss_api_common_v2_scanoss_common_proto_depIdxs = nil
}
