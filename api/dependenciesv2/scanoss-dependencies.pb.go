//
//SPDX-License-Identifier: MIT
//
//Copyright (c) 2022, SCANOSS
//
//Permission is hereby granted, free of charge, to any person obtaining a copy
//of this software and associated documentation files (the "Software"), to deal
//in the Software without restriction, including without limitation the rights
//to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//copies of the Software, and to permit persons to whom the Software is
//furnished to do so, subject to the following conditions:
//
//The above copyright notice and this permission notice shall be included in
//all copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//THE SOFTWARE.

//**
// Dependency definition details
//*

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: scanoss/api/dependencies/v2/scanoss-dependencies.proto

package dependenciesv2

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	commonv2 "github.com/scanoss/papi/api/commonv2"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Dependency request data (JSON payload)
type DependencyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of dependency files
	Files []*DependencyRequest_Files `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	// Depth to go when searching dependencies
	Depth         int32 `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DependencyRequest) Reset() {
	*x = DependencyRequest{}
	mi := &file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DependencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependencyRequest) ProtoMessage() {}

func (x *DependencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependencyRequest.ProtoReflect.Descriptor instead.
func (*DependencyRequest) Descriptor() ([]byte, []int) {
	return file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDescGZIP(), []int{0}
}

func (x *DependencyRequest) GetFiles() []*DependencyRequest_Files {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *DependencyRequest) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

// Dependency response data (JSON payload)
type DependencyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Dependency response details
	Files []*DependencyResponse_Files `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	// Response status (required?)
	Status        *commonv2.StatusResponse `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DependencyResponse) Reset() {
	*x = DependencyResponse{}
	mi := &file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DependencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependencyResponse) ProtoMessage() {}

func (x *DependencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependencyResponse.ProtoReflect.Descriptor instead.
func (*DependencyResponse) Descriptor() ([]byte, []int) {
	return file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDescGZIP(), []int{1}
}

func (x *DependencyResponse) GetFiles() []*DependencyResponse_Files {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *DependencyResponse) GetStatus() *commonv2.StatusResponse {
	if x != nil {
		return x.Status
	}
	return nil
}

// Transitive dependency request data (JSON payload)
type TransitiveDependencyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Ecosystem to restrict reporting on (i.e. npm, maven, github, etc.) - optional
	Ecosystem string `protobuf:"bytes,1,opt,name=ecosystem,proto3" json:"ecosystem,omitempty"`
	// Depth (number of layers) to go when searching for dependencies - optional
	Depth int32 `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"`
	// Limit the number of components reported back - optional
	Limit int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// List of Purls from the same ecosystem
	Purls         []*commonv2.Purl `protobuf:"bytes,5,rep,name=purls,proto3" json:"purls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransitiveDependencyRequest) Reset() {
	*x = TransitiveDependencyRequest{}
	mi := &file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransitiveDependencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransitiveDependencyRequest) ProtoMessage() {}

func (x *TransitiveDependencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransitiveDependencyRequest.ProtoReflect.Descriptor instead.
func (*TransitiveDependencyRequest) Descriptor() ([]byte, []int) {
	return file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDescGZIP(), []int{2}
}

func (x *TransitiveDependencyRequest) GetEcosystem() string {
	if x != nil {
		return x.Ecosystem
	}
	return ""
}

func (x *TransitiveDependencyRequest) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *TransitiveDependencyRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TransitiveDependencyRequest) GetPurls() []*commonv2.Purl {
	if x != nil {
		return x.Purls
	}
	return nil
}

// Transitive dependency response data (JSON payload)
type TransitiveDependencyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Dependency response details
	Dependencies []*TransitiveDependencyResponse_Dependencies `protobuf:"bytes,1,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	// Response status
	Status        *commonv2.StatusResponse `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransitiveDependencyResponse) Reset() {
	*x = TransitiveDependencyResponse{}
	mi := &file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransitiveDependencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransitiveDependencyResponse) ProtoMessage() {}

func (x *TransitiveDependencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransitiveDependencyResponse.ProtoReflect.Descriptor instead.
func (*TransitiveDependencyResponse) Descriptor() ([]byte, []int) {
	return file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDescGZIP(), []int{3}
}

func (x *TransitiveDependencyResponse) GetDependencies() []*TransitiveDependencyResponse_Dependencies {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *TransitiveDependencyResponse) GetStatus() *commonv2.StatusResponse {
	if x != nil {
		return x.Status
	}
	return nil
}

// List of Purls/requirements
type DependencyRequest_Purls struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Purl name
	Purl string `protobuf:"bytes,1,opt,name=purl,proto3" json:"purl,omitempty"`
	// requirement - optional
	Requirement   string `protobuf:"bytes,2,opt,name=requirement,proto3" json:"requirement,omitempty"` //    string scope = 3;  // TODO what did we want scope for?
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DependencyRequest_Purls) Reset() {
	*x = DependencyRequest_Purls{}
	mi := &file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DependencyRequest_Purls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependencyRequest_Purls) ProtoMessage() {}

func (x *DependencyRequest_Purls) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependencyRequest_Purls.ProtoReflect.Descriptor instead.
func (*DependencyRequest_Purls) Descriptor() ([]byte, []int) {
	return file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDescGZIP(), []int{0, 0}
}

func (x *DependencyRequest_Purls) GetPurl() string {
	if x != nil {
		return x.Purl
	}
	return ""
}

func (x *DependencyRequest_Purls) GetRequirement() string {
	if x != nil {
		return x.Requirement
	}
	return ""
}

// List of dependency files
type DependencyRequest_Files struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// dependency filename
	File string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	// List of purls
	Purls         []*DependencyRequest_Purls `protobuf:"bytes,2,rep,name=purls,proto3" json:"purls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DependencyRequest_Files) Reset() {
	*x = DependencyRequest_Files{}
	mi := &file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DependencyRequest_Files) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependencyRequest_Files) ProtoMessage() {}

func (x *DependencyRequest_Files) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependencyRequest_Files.ProtoReflect.Descriptor instead.
func (*DependencyRequest_Files) Descriptor() ([]byte, []int) {
	return file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDescGZIP(), []int{0, 1}
}

func (x *DependencyRequest_Files) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *DependencyRequest_Files) GetPurls() []*DependencyRequest_Purls {
	if x != nil {
		return x.Purls
	}
	return nil
}

type DependencyResponse_Licenses struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Name           string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SpdxId         string                 `protobuf:"bytes,2,opt,name=spdx_id,json=spdxId,proto3" json:"spdx_id,omitempty"`
	IsSpdxApproved bool                   `protobuf:"varint,3,opt,name=is_spdx_approved,json=isSpdxApproved,proto3" json:"is_spdx_approved,omitempty"`
	Url            string                 `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DependencyResponse_Licenses) Reset() {
	*x = DependencyResponse_Licenses{}
	mi := &file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DependencyResponse_Licenses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependencyResponse_Licenses) ProtoMessage() {}

func (x *DependencyResponse_Licenses) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependencyResponse_Licenses.ProtoReflect.Descriptor instead.
func (*DependencyResponse_Licenses) Descriptor() ([]byte, []int) {
	return file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDescGZIP(), []int{1, 0}
}

func (x *DependencyResponse_Licenses) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DependencyResponse_Licenses) GetSpdxId() string {
	if x != nil {
		return x.SpdxId
	}
	return ""
}

func (x *DependencyResponse_Licenses) GetIsSpdxApproved() bool {
	if x != nil {
		return x.IsSpdxApproved
	}
	return false
}

func (x *DependencyResponse_Licenses) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type DependencyResponse_Dependencies struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Component     string                         `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
	Purl          string                         `protobuf:"bytes,2,opt,name=purl,proto3" json:"purl,omitempty"`
	Version       string                         `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Licenses      []*DependencyResponse_Licenses `protobuf:"bytes,4,rep,name=licenses,proto3" json:"licenses,omitempty"`
	Url           string                         `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Comment       string                         `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"` //    string scope = 7;
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DependencyResponse_Dependencies) Reset() {
	*x = DependencyResponse_Dependencies{}
	mi := &file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DependencyResponse_Dependencies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependencyResponse_Dependencies) ProtoMessage() {}

func (x *DependencyResponse_Dependencies) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependencyResponse_Dependencies.ProtoReflect.Descriptor instead.
func (*DependencyResponse_Dependencies) Descriptor() ([]byte, []int) {
	return file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDescGZIP(), []int{1, 1}
}

func (x *DependencyResponse_Dependencies) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *DependencyResponse_Dependencies) GetPurl() string {
	if x != nil {
		return x.Purl
	}
	return ""
}

func (x *DependencyResponse_Dependencies) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DependencyResponse_Dependencies) GetLicenses() []*DependencyResponse_Licenses {
	if x != nil {
		return x.Licenses
	}
	return nil
}

func (x *DependencyResponse_Dependencies) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DependencyResponse_Dependencies) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type DependencyResponse_Files struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	File          string                             `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Id            string                             `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Status        string                             `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Dependencies  []*DependencyResponse_Dependencies `protobuf:"bytes,4,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DependencyResponse_Files) Reset() {
	*x = DependencyResponse_Files{}
	mi := &file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DependencyResponse_Files) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependencyResponse_Files) ProtoMessage() {}

func (x *DependencyResponse_Files) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependencyResponse_Files.ProtoReflect.Descriptor instead.
func (*DependencyResponse_Files) Descriptor() ([]byte, []int) {
	return file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDescGZIP(), []int{1, 2}
}

func (x *DependencyResponse_Files) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *DependencyResponse_Files) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DependencyResponse_Files) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DependencyResponse_Files) GetDependencies() []*DependencyResponse_Dependencies {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

type TransitiveDependencyResponse_Dependencies struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Purl          string                 `protobuf:"bytes,1,opt,name=purl,proto3" json:"purl,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"` // optional string scope = 3; // TODO: Add scope field
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransitiveDependencyResponse_Dependencies) Reset() {
	*x = TransitiveDependencyResponse_Dependencies{}
	mi := &file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransitiveDependencyResponse_Dependencies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransitiveDependencyResponse_Dependencies) ProtoMessage() {}

func (x *TransitiveDependencyResponse_Dependencies) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransitiveDependencyResponse_Dependencies.ProtoReflect.Descriptor instead.
func (*TransitiveDependencyResponse_Dependencies) Descriptor() ([]byte, []int) {
	return file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDescGZIP(), []int{3, 0}
}

func (x *TransitiveDependencyResponse_Dependencies) GetPurl() string {
	if x != nil {
		return x.Purl
	}
	return ""
}

func (x *TransitiveDependencyResponse_Dependencies) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_scanoss_api_dependencies_v2_scanoss_dependencies_proto protoreflect.FileDescriptor

const file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDesc = "" +
	"\n" +
	"6scanoss/api/dependencies/v2/scanoss-dependencies.proto\x12\x1bscanoss.api.dependencies.v2\x1a*scanoss/api/common/v2/scanoss-common.proto\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\x9d\x02\n" +
	"\x11DependencyRequest\x12J\n" +
	"\x05files\x18\x01 \x03(\v24.scanoss.api.dependencies.v2.DependencyRequest.FilesR\x05files\x12\x14\n" +
	"\x05depth\x18\x02 \x01(\x05R\x05depth\x1a=\n" +
	"\x05Purls\x12\x12\n" +
	"\x04purl\x18\x01 \x01(\tR\x04purl\x12 \n" +
	"\vrequirement\x18\x02 \x01(\tR\vrequirement\x1ag\n" +
	"\x05Files\x12\x12\n" +
	"\x04file\x18\x01 \x01(\tR\x04file\x12J\n" +
	"\x05purls\x18\x02 \x03(\v24.scanoss.api.dependencies.v2.DependencyRequest.PurlsR\x05purls\"\x9c\x05\n" +
	"\x12DependencyResponse\x12K\n" +
	"\x05files\x18\x01 \x03(\v25.scanoss.api.dependencies.v2.DependencyResponse.FilesR\x05files\x12=\n" +
	"\x06status\x18\x02 \x01(\v2%.scanoss.api.common.v2.StatusResponseR\x06status\x1as\n" +
	"\bLicenses\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x17\n" +
	"\aspdx_id\x18\x02 \x01(\tR\x06spdxId\x12(\n" +
	"\x10is_spdx_approved\x18\x03 \x01(\bR\x0eisSpdxApproved\x12\x10\n" +
	"\x03url\x18\x04 \x01(\tR\x03url\x1a\xdc\x01\n" +
	"\fDependencies\x12\x1c\n" +
	"\tcomponent\x18\x01 \x01(\tR\tcomponent\x12\x12\n" +
	"\x04purl\x18\x02 \x01(\tR\x04purl\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12T\n" +
	"\blicenses\x18\x04 \x03(\v28.scanoss.api.dependencies.v2.DependencyResponse.LicensesR\blicenses\x12\x10\n" +
	"\x03url\x18\x05 \x01(\tR\x03url\x12\x18\n" +
	"\acomment\x18\x06 \x01(\tR\acomment\x1a\xa5\x01\n" +
	"\x05Files\x12\x12\n" +
	"\x04file\x18\x01 \x01(\tR\x04file\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12`\n" +
	"\fdependencies\x18\x04 \x03(\v2<.scanoss.api.dependencies.v2.DependencyResponse.DependenciesR\fdependencies\"\x9a\x01\n" +
	"\x1bTransitiveDependencyRequest\x12\x1c\n" +
	"\tecosystem\x18\x01 \x01(\tR\tecosystem\x12\x14\n" +
	"\x05depth\x18\x02 \x01(\x05R\x05depth\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x121\n" +
	"\x05purls\x18\x05 \x03(\v2\x1b.scanoss.api.common.v2.PurlR\x05purls\"\x87\x02\n" +
	"\x1cTransitiveDependencyResponse\x12j\n" +
	"\fdependencies\x18\x01 \x03(\v2F.scanoss.api.dependencies.v2.TransitiveDependencyResponse.DependenciesR\fdependencies\x12=\n" +
	"\x06status\x18\x02 \x01(\v2%.scanoss.api.common.v2.StatusResponseR\x06status\x1a<\n" +
	"\fDependencies\x12\x12\n" +
	"\x04purl\x18\x01 \x01(\tR\x04purl\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion2\xe7\x03\n" +
	"\fDependencies\x12u\n" +
	"\x04Echo\x12\".scanoss.api.common.v2.EchoRequest\x1a#.scanoss.api.common.v2.EchoResponse\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/api/v2/dependencies/echo\x12\xa0\x01\n" +
	"\x0fGetDependencies\x12..scanoss.api.dependencies.v2.DependencyRequest\x1a/.scanoss.api.dependencies.v2.DependencyResponse\",\x82\xd3\xe4\x93\x02&:\x01*\"!/api/v2/dependencies/dependencies\x12\xbc\x01\n" +
	"\x19GetTransitiveDependencies\x128.scanoss.api.dependencies.v2.TransitiveDependencyRequest\x1a9.scanoss.api.dependencies.v2.TransitiveDependencyResponse\"*\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/api/v2/dependencies/transitiveB\x9c\x02\x92A\xdd\x01\x12w\n" +
	"\x1aSCANOSS Dependency Service\"T\n" +
	"\x14scanoss-dependencies\x12'https://github.com/scanoss/dependencies\x1a\x13support@scanoss.com2\x032.0*\x01\x012\x10application/json:\x10application/jsonR;\n" +
	"\x03404\x124\n" +
	"*Returned when the resource does not exist.\x12\x06\n" +
	"\x04\x9a\x02\x01\aZ9github.com/scanoss/papi/api/dependenciesv2;dependenciesv2b\x06proto3"

var (
	file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDescOnce sync.Once
	file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDescData []byte
)

func file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDescGZIP() []byte {
	file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDescOnce.Do(func() {
		file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDesc), len(file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDesc)))
	})
	return file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDescData
}

var file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_goTypes = []any{
	(*DependencyRequest)(nil),                         // 0: scanoss.api.dependencies.v2.DependencyRequest
	(*DependencyResponse)(nil),                        // 1: scanoss.api.dependencies.v2.DependencyResponse
	(*TransitiveDependencyRequest)(nil),               // 2: scanoss.api.dependencies.v2.TransitiveDependencyRequest
	(*TransitiveDependencyResponse)(nil),              // 3: scanoss.api.dependencies.v2.TransitiveDependencyResponse
	(*DependencyRequest_Purls)(nil),                   // 4: scanoss.api.dependencies.v2.DependencyRequest.Purls
	(*DependencyRequest_Files)(nil),                   // 5: scanoss.api.dependencies.v2.DependencyRequest.Files
	(*DependencyResponse_Licenses)(nil),               // 6: scanoss.api.dependencies.v2.DependencyResponse.Licenses
	(*DependencyResponse_Dependencies)(nil),           // 7: scanoss.api.dependencies.v2.DependencyResponse.Dependencies
	(*DependencyResponse_Files)(nil),                  // 8: scanoss.api.dependencies.v2.DependencyResponse.Files
	(*TransitiveDependencyResponse_Dependencies)(nil), // 9: scanoss.api.dependencies.v2.TransitiveDependencyResponse.Dependencies
	(*commonv2.StatusResponse)(nil),                   // 10: scanoss.api.common.v2.StatusResponse
	(*commonv2.Purl)(nil),                             // 11: scanoss.api.common.v2.Purl
	(*commonv2.EchoRequest)(nil),                      // 12: scanoss.api.common.v2.EchoRequest
	(*commonv2.EchoResponse)(nil),                     // 13: scanoss.api.common.v2.EchoResponse
}
var file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_depIdxs = []int32{
	5,  // 0: scanoss.api.dependencies.v2.DependencyRequest.files:type_name -> scanoss.api.dependencies.v2.DependencyRequest.Files
	8,  // 1: scanoss.api.dependencies.v2.DependencyResponse.files:type_name -> scanoss.api.dependencies.v2.DependencyResponse.Files
	10, // 2: scanoss.api.dependencies.v2.DependencyResponse.status:type_name -> scanoss.api.common.v2.StatusResponse
	11, // 3: scanoss.api.dependencies.v2.TransitiveDependencyRequest.purls:type_name -> scanoss.api.common.v2.Purl
	9,  // 4: scanoss.api.dependencies.v2.TransitiveDependencyResponse.dependencies:type_name -> scanoss.api.dependencies.v2.TransitiveDependencyResponse.Dependencies
	10, // 5: scanoss.api.dependencies.v2.TransitiveDependencyResponse.status:type_name -> scanoss.api.common.v2.StatusResponse
	4,  // 6: scanoss.api.dependencies.v2.DependencyRequest.Files.purls:type_name -> scanoss.api.dependencies.v2.DependencyRequest.Purls
	6,  // 7: scanoss.api.dependencies.v2.DependencyResponse.Dependencies.licenses:type_name -> scanoss.api.dependencies.v2.DependencyResponse.Licenses
	7,  // 8: scanoss.api.dependencies.v2.DependencyResponse.Files.dependencies:type_name -> scanoss.api.dependencies.v2.DependencyResponse.Dependencies
	12, // 9: scanoss.api.dependencies.v2.Dependencies.Echo:input_type -> scanoss.api.common.v2.EchoRequest
	0,  // 10: scanoss.api.dependencies.v2.Dependencies.GetDependencies:input_type -> scanoss.api.dependencies.v2.DependencyRequest
	2,  // 11: scanoss.api.dependencies.v2.Dependencies.GetTransitiveDependencies:input_type -> scanoss.api.dependencies.v2.TransitiveDependencyRequest
	13, // 12: scanoss.api.dependencies.v2.Dependencies.Echo:output_type -> scanoss.api.common.v2.EchoResponse
	1,  // 13: scanoss.api.dependencies.v2.Dependencies.GetDependencies:output_type -> scanoss.api.dependencies.v2.DependencyResponse
	3,  // 14: scanoss.api.dependencies.v2.Dependencies.GetTransitiveDependencies:output_type -> scanoss.api.dependencies.v2.TransitiveDependencyResponse
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_init() }
func file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_init() {
	if File_scanoss_api_dependencies_v2_scanoss_dependencies_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDesc), len(file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_goTypes,
		DependencyIndexes: file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_depIdxs,
		MessageInfos:      file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_msgTypes,
	}.Build()
	File_scanoss_api_dependencies_v2_scanoss_dependencies_proto = out.File
	file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_goTypes = nil
	file_scanoss_api_dependencies_v2_scanoss_dependencies_proto_depIdxs = nil
}
