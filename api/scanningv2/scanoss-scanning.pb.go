//
//SPDX-License-Identifier: MIT
//
//Copyright (c) 2024, SCANOSS
//
//Permission is hereby granted, free of charge, to any person obtaining a copy
//of this software and associated documentation files (the "Software"), to deal
//in the Software without restriction, including without limitation the rights
//to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//copies of the Software, and to permit persons to whom the Software is
//furnished to do so, subject to the following conditions:
//
//The above copyright notice and this permission notice shall be included in
//all copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//THE SOFTWARE.

//**
//Scanning definition details
//*

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: scanoss/api/scanning/v2/scanoss-scanning.proto

package scanningv2

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	commonv2 "github.com/scanoss/papi/api/commonv2"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// High precision Folder Hashing scan request
type HFHRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Report best match (most hits) or not. Default: false
	BestMatch bool `protobuf:"varint,1,opt,name=best_match,json=bestMatch,proto3" json:"best_match,omitempty"`
	// Detection threshold (distance) for component selection. Default: 60
	Threshold int32 `protobuf:"varint,2,opt,name=threshold,proto3" json:"threshold,omitempty"`
	// Folder root node to be scanned
	Root          *HFHRequest_Children `protobuf:"bytes,3,opt,name=root,proto3" json:"root,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HFHRequest) Reset() {
	*x = HFHRequest{}
	mi := &file_scanoss_api_scanning_v2_scanoss_scanning_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HFHRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HFHRequest) ProtoMessage() {}

func (x *HFHRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_scanning_v2_scanoss_scanning_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HFHRequest.ProtoReflect.Descriptor instead.
func (*HFHRequest) Descriptor() ([]byte, []int) {
	return file_scanoss_api_scanning_v2_scanoss_scanning_proto_rawDescGZIP(), []int{0}
}

func (x *HFHRequest) GetBestMatch() bool {
	if x != nil {
		return x.BestMatch
	}
	return false
}

func (x *HFHRequest) GetThreshold() int32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *HFHRequest) GetRoot() *HFHRequest_Children {
	if x != nil {
		return x.Root
	}
	return nil
}

// High precision Folder Hashing scan response
type HFHResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of folders containing unique components
	Results       []*HFHResponse_Result    `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Status        *commonv2.StatusResponse `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HFHResponse) Reset() {
	*x = HFHResponse{}
	mi := &file_scanoss_api_scanning_v2_scanoss_scanning_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HFHResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HFHResponse) ProtoMessage() {}

func (x *HFHResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_scanning_v2_scanoss_scanning_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HFHResponse.ProtoReflect.Descriptor instead.
func (*HFHResponse) Descriptor() ([]byte, []int) {
	return file_scanoss_api_scanning_v2_scanoss_scanning_proto_rawDescGZIP(), []int{1}
}

func (x *HFHResponse) GetResults() []*HFHResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *HFHResponse) GetStatus() *commonv2.StatusResponse {
	if x != nil {
		return x.Status
	}
	return nil
}

// Child node from the folder structure
type HFHRequest_Children struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Folder path (can be actual or obfuscated)
	PathId string `protobuf:"bytes,1,opt,name=path_id,json=pathId,proto3" json:"path_id,omitempty"`
	// Proximity hash calculated from this nodes filenames (and their children).
	SimHashNames string `protobuf:"bytes,2,opt,name=sim_hash_names,json=simHashNames,proto3" json:"sim_hash_names,omitempty"`
	// Proximity hash calculated from this nodes file contents (and their children).
	SimHashContent string `protobuf:"bytes,3,opt,name=sim_hash_content,json=simHashContent,proto3" json:"sim_hash_content,omitempty"`
	// Sub-folders inside this child
	Children      []*HFHRequest_Children `protobuf:"bytes,4,rep,name=children,proto3" json:"children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HFHRequest_Children) Reset() {
	*x = HFHRequest_Children{}
	mi := &file_scanoss_api_scanning_v2_scanoss_scanning_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HFHRequest_Children) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HFHRequest_Children) ProtoMessage() {}

func (x *HFHRequest_Children) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_scanning_v2_scanoss_scanning_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HFHRequest_Children.ProtoReflect.Descriptor instead.
func (*HFHRequest_Children) Descriptor() ([]byte, []int) {
	return file_scanoss_api_scanning_v2_scanoss_scanning_proto_rawDescGZIP(), []int{0, 0}
}

func (x *HFHRequest_Children) GetPathId() string {
	if x != nil {
		return x.PathId
	}
	return ""
}

func (x *HFHRequest_Children) GetSimHashNames() string {
	if x != nil {
		return x.SimHashNames
	}
	return ""
}

func (x *HFHRequest_Children) GetSimHashContent() string {
	if x != nil {
		return x.SimHashContent
	}
	return ""
}

func (x *HFHRequest_Children) GetChildren() []*HFHRequest_Children {
	if x != nil {
		return x.Children
	}
	return nil
}

// Matched component details
type HFHResponse_Component struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Component PURL
	Purl string `protobuf:"bytes,1,opt,name=purl,proto3" json:"purl,omitempty"`
	// Component match version (could be multiple)
	Versions []string `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty"`
	// Component Ranking from 1 to 10. 1 means official well known repository, 10 might be garbage.
	Rank          int32 `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HFHResponse_Component) Reset() {
	*x = HFHResponse_Component{}
	mi := &file_scanoss_api_scanning_v2_scanoss_scanning_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HFHResponse_Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HFHResponse_Component) ProtoMessage() {}

func (x *HFHResponse_Component) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_scanning_v2_scanoss_scanning_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HFHResponse_Component.ProtoReflect.Descriptor instead.
func (*HFHResponse_Component) Descriptor() ([]byte, []int) {
	return file_scanoss_api_scanning_v2_scanoss_scanning_proto_rawDescGZIP(), []int{1, 0}
}

func (x *HFHResponse_Component) GetPurl() string {
	if x != nil {
		return x.Purl
	}
	return ""
}

func (x *HFHResponse_Component) GetVersions() []string {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *HFHResponse_Component) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

// Result item, link a path with a list of components
type HFHResponse_Result struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Folder path (can be actual or obfuscated)
	PathId string `protobuf:"bytes,1,opt,name=path_id,json=pathId,proto3" json:"path_id,omitempty"`
	// List of matching components
	Components []*HFHResponse_Component `protobuf:"bytes,2,rep,name=components,proto3" json:"components,omitempty"`
	// Matching probability
	Probability float32 `protobuf:"fixed32,3,opt,name=probability,proto3" json:"probability,omitempty"`
	// result stage
	Stage         int32 `protobuf:"varint,4,opt,name=stage,proto3" json:"stage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HFHResponse_Result) Reset() {
	*x = HFHResponse_Result{}
	mi := &file_scanoss_api_scanning_v2_scanoss_scanning_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HFHResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HFHResponse_Result) ProtoMessage() {}

func (x *HFHResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_scanoss_api_scanning_v2_scanoss_scanning_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HFHResponse_Result.ProtoReflect.Descriptor instead.
func (*HFHResponse_Result) Descriptor() ([]byte, []int) {
	return file_scanoss_api_scanning_v2_scanoss_scanning_proto_rawDescGZIP(), []int{1, 1}
}

func (x *HFHResponse_Result) GetPathId() string {
	if x != nil {
		return x.PathId
	}
	return ""
}

func (x *HFHResponse_Result) GetComponents() []*HFHResponse_Component {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *HFHResponse_Result) GetProbability() float32 {
	if x != nil {
		return x.Probability
	}
	return 0
}

func (x *HFHResponse_Result) GetStage() int32 {
	if x != nil {
		return x.Stage
	}
	return 0
}

var File_scanoss_api_scanning_v2_scanoss_scanning_proto protoreflect.FileDescriptor

const file_scanoss_api_scanning_v2_scanoss_scanning_proto_rawDesc = "" +
	"\n" +
	".scanoss/api/scanning/v2/scanoss-scanning.proto\x12\x17scanoss.api.scanning.v2\x1a*scanoss/api/common/v2/scanoss-common.proto\x1a\x1cgoogle/api/annotations.proto\x1a,protoc-gen-swagger/options/annotations.proto\"\xcb\x02\n" +
	"\n" +
	"HFHRequest\x12\x1d\n" +
	"\n" +
	"best_match\x18\x01 \x01(\bR\tbestMatch\x12\x1c\n" +
	"\tthreshold\x18\x02 \x01(\x05R\tthreshold\x12@\n" +
	"\x04root\x18\x03 \x01(\v2,.scanoss.api.scanning.v2.HFHRequest.ChildrenR\x04root\x1a\xbd\x01\n" +
	"\bChildren\x12\x17\n" +
	"\apath_id\x18\x01 \x01(\tR\x06pathId\x12$\n" +
	"\x0esim_hash_names\x18\x02 \x01(\tR\fsimHashNames\x12(\n" +
	"\x10sim_hash_content\x18\x03 \x01(\tR\x0esimHashContent\x12H\n" +
	"\bchildren\x18\x04 \x03(\v2,.scanoss.api.scanning.v2.HFHRequest.ChildrenR\bchildren\"\x90\x03\n" +
	"\vHFHResponse\x12E\n" +
	"\aresults\x18\x01 \x03(\v2+.scanoss.api.scanning.v2.HFHResponse.ResultR\aresults\x12=\n" +
	"\x06status\x18\x02 \x01(\v2%.scanoss.api.common.v2.StatusResponseR\x06status\x1aO\n" +
	"\tComponent\x12\x12\n" +
	"\x04purl\x18\x01 \x01(\tR\x04purl\x12\x1a\n" +
	"\bversions\x18\x02 \x03(\tR\bversions\x12\x12\n" +
	"\x04rank\x18\x03 \x01(\x05R\x04rank\x1a\xa9\x01\n" +
	"\x06Result\x12\x17\n" +
	"\apath_id\x18\x01 \x01(\tR\x06pathId\x12N\n" +
	"\n" +
	"components\x18\x02 \x03(\v2..scanoss.api.scanning.v2.HFHResponse.ComponentR\n" +
	"components\x12 \n" +
	"\vprobability\x18\x03 \x01(\x02R\vprobability\x12\x14\n" +
	"\x05stage\x18\x04 \x01(\x05R\x05stage2\x81\x02\n" +
	"\bScanning\x12q\n" +
	"\x04Echo\x12\".scanoss.api.common.v2.EchoRequest\x1a#.scanoss.api.common.v2.EchoResponse\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/api/v2/scanning/echo\x12\x81\x01\n" +
	"\x0eFolderHashScan\x12#.scanoss.api.scanning.v2.HFHRequest\x1a$.scanoss.api.scanning.v2.HFHResponse\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/api/v2/scanning/hfh/scanB\x8a\x02\x92A\xd3\x01\x12m\n" +
	"\x18SCANOSS Scanning Service\"L\n" +
	"\x10scanoss-scanning\x12#https://github.com/scanoss/scanning\x1a\x13support@scanoss.com2\x032.0*\x01\x012\x10application/json:\x10application/jsonR;\n" +
	"\x03404\x124\n" +
	"*Returned when the resource does not exist.\x12\x06\n" +
	"\x04\x9a\x02\x01\aZ1github.com/scanoss/papi/api/scanningv2;scanningv2b\x06proto3"

var (
	file_scanoss_api_scanning_v2_scanoss_scanning_proto_rawDescOnce sync.Once
	file_scanoss_api_scanning_v2_scanoss_scanning_proto_rawDescData []byte
)

func file_scanoss_api_scanning_v2_scanoss_scanning_proto_rawDescGZIP() []byte {
	file_scanoss_api_scanning_v2_scanoss_scanning_proto_rawDescOnce.Do(func() {
		file_scanoss_api_scanning_v2_scanoss_scanning_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_scanoss_api_scanning_v2_scanoss_scanning_proto_rawDesc), len(file_scanoss_api_scanning_v2_scanoss_scanning_proto_rawDesc)))
	})
	return file_scanoss_api_scanning_v2_scanoss_scanning_proto_rawDescData
}

var file_scanoss_api_scanning_v2_scanoss_scanning_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_scanoss_api_scanning_v2_scanoss_scanning_proto_goTypes = []any{
	(*HFHRequest)(nil),              // 0: scanoss.api.scanning.v2.HFHRequest
	(*HFHResponse)(nil),             // 1: scanoss.api.scanning.v2.HFHResponse
	(*HFHRequest_Children)(nil),     // 2: scanoss.api.scanning.v2.HFHRequest.Children
	(*HFHResponse_Component)(nil),   // 3: scanoss.api.scanning.v2.HFHResponse.Component
	(*HFHResponse_Result)(nil),      // 4: scanoss.api.scanning.v2.HFHResponse.Result
	(*commonv2.StatusResponse)(nil), // 5: scanoss.api.common.v2.StatusResponse
	(*commonv2.EchoRequest)(nil),    // 6: scanoss.api.common.v2.EchoRequest
	(*commonv2.EchoResponse)(nil),   // 7: scanoss.api.common.v2.EchoResponse
}
var file_scanoss_api_scanning_v2_scanoss_scanning_proto_depIdxs = []int32{
	2, // 0: scanoss.api.scanning.v2.HFHRequest.root:type_name -> scanoss.api.scanning.v2.HFHRequest.Children
	4, // 1: scanoss.api.scanning.v2.HFHResponse.results:type_name -> scanoss.api.scanning.v2.HFHResponse.Result
	5, // 2: scanoss.api.scanning.v2.HFHResponse.status:type_name -> scanoss.api.common.v2.StatusResponse
	2, // 3: scanoss.api.scanning.v2.HFHRequest.Children.children:type_name -> scanoss.api.scanning.v2.HFHRequest.Children
	3, // 4: scanoss.api.scanning.v2.HFHResponse.Result.components:type_name -> scanoss.api.scanning.v2.HFHResponse.Component
	6, // 5: scanoss.api.scanning.v2.Scanning.Echo:input_type -> scanoss.api.common.v2.EchoRequest
	0, // 6: scanoss.api.scanning.v2.Scanning.FolderHashScan:input_type -> scanoss.api.scanning.v2.HFHRequest
	7, // 7: scanoss.api.scanning.v2.Scanning.Echo:output_type -> scanoss.api.common.v2.EchoResponse
	1, // 8: scanoss.api.scanning.v2.Scanning.FolderHashScan:output_type -> scanoss.api.scanning.v2.HFHResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_scanoss_api_scanning_v2_scanoss_scanning_proto_init() }
func file_scanoss_api_scanning_v2_scanoss_scanning_proto_init() {
	if File_scanoss_api_scanning_v2_scanoss_scanning_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_scanoss_api_scanning_v2_scanoss_scanning_proto_rawDesc), len(file_scanoss_api_scanning_v2_scanoss_scanning_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scanoss_api_scanning_v2_scanoss_scanning_proto_goTypes,
		DependencyIndexes: file_scanoss_api_scanning_v2_scanoss_scanning_proto_depIdxs,
		MessageInfos:      file_scanoss_api_scanning_v2_scanoss_scanning_proto_msgTypes,
	}.Build()
	File_scanoss_api_scanning_v2_scanoss_scanning_proto = out.File
	file_scanoss_api_scanning_v2_scanoss_scanning_proto_goTypes = nil
	file_scanoss_api_scanning_v2_scanoss_scanning_proto_depIdxs = nil
}
