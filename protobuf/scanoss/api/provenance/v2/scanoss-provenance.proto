/*
 SPDX-License-Identifier: MIT

   Copyright (c) 2023, SCANOSS

   Permission is hereby granted, free of charge, to any person obtaining a copy
   of this software and associated documentation files (the "Software"), to deal
   in the Software without restriction, including without limitation the rights
   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   copies of the Software, and to permit persons to whom the Software is
   furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included in
   all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   THE SOFTWARE.
 */

/**
 * Provenance definition details
*/
syntax = "proto3";
package scanoss.api.provenance.v2;

option go_package = "github.com/scanoss/papi/api/provenancev2;provenancev2";

import "scanoss/api/common/v2/scanoss-common.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "SCANOSS Provenance Service";
    version: "2.0";
    contact: {
      name: "scanoss-provenance";
      url: "https://github.com/scanoss/provenance";
      email: "support@scanoss.com";
    };
  };
  schemes: HTTP;
  consumes: "application/json";
  produces: "application/json";
  responses: {
    key: "404";
    value: {
      description: "Returned when the resource does not exist.";
      schema: {
        json_schema: {
          type: STRING;
        }
      }
    }
  }
};

/**
 * Expose all of the SCANOSS Provenance RPCs here
 */
service Provenance {
  // Standard echo
  rpc Echo(scanoss.api.common.v2.EchoRequest) returns(scanoss.api.common.v2.EchoResponse) {
    option (google.api.http) = {
      post: "/api/v2/provenance/echo"
      body: "*"
    };
  };
  // Get Provenance countries associated with a list of PURLs
  rpc GetComponentProvenance(scanoss.api.common.v2.PurlRequest) returns(ProvenanceResponse) {
    option (google.api.http) = {
      post: "/api/v2/provenance/countries"
      body: "*"
    };
  };
}

 
/**
 * Component level Provenance Response data (JSON payload)
 */
message ProvenanceResponse {
  
  // Declared location for the project
  message DeclaredLocation {
    // Declared location could be either from the owner or a contributor
    string type = 1;
    // Country/State/City/Province/Place declared on the repo
    string location = 2;
  }
  
  // Curated provenance information about the project 
  message CuratedLocation {
    // Country for the owner or contributor
    string country = 1;
    // Ocurrences for users or contributors on this specific country
    int32 count = 2;
  }
  // Information about a given purl
  message Purls {
    // The purl string
    string purl = 1;
    // The purl version
    string version = 2;
    // List of locations declared on user repository
    repeated DeclaredLocation declared_locations = 3;
    // List of craft curated location
    repeated CuratedLocation curated_locations = 4;
    
  }
 
  // Provenance details
  repeated Purls purls = 1;
  // Response status
  scanoss.api.common.v2.StatusResponse status = 2;
}

