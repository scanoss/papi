{
  "swagger": "2.0",
  "info": {
    "title": "SCANOSS Dependency Service",
    "version": "2.0",
    "contact": {
      "name": "scanoss-dependencies",
      "url": "https://github.com/scanoss/dependencies",
      "email": "support@scanoss.com"
    }
  },
  "tags": [
    {
      "name": "Dependencies"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v2/dependencies/dependencies": {
      "post": {
        "summary": "Get dependency details\nDeprecated: Use /v2/licenses/components instead",
        "operationId": "Dependencies_GetDependencies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DependencyResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2DependencyRequest"
            }
          }
        ],
        "tags": [
          "Dependencies"
        ]
      }
    },
    "/v2/dependencies/echo": {
      "post": {
        "summary": "Standard echo",
        "operationId": "Dependencies_Echo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2EchoResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Echo Message Request.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2EchoRequest"
            }
          }
        ],
        "tags": [
          "Dependencies"
        ]
      }
    },
    "/v2/dependencies/transitive/components": {
      "post": {
        "summary": "Get transitive dependency details",
        "operationId": "Dependencies_GetTransitiveDependencies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2TransitiveDependencyResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2TransitiveDependencyRequest"
            }
          }
        ],
        "tags": [
          "Dependencies"
        ]
      }
    }
  },
  "definitions": {
    "DependencyResponseDependencies": {
      "type": "object",
      "properties": {
        "component": {
          "type": "string"
        },
        "purl": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "licenses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DependencyResponseLicenses"
          }
        },
        "url": {
          "type": "string"
        },
        "comment": {
          "type": "string",
          "title": "string scope = 7;"
        }
      }
    },
    "DependencyResponseLicenses": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "spdx_id": {
          "type": "string"
        },
        "is_spdx_approved": {
          "type": "boolean"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "TransitiveDependencyResponseComponent": {
      "type": "object",
      "properties": {
        "purl": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "requirement": {
          "type": "string",
          "title": "optional string scope = 3; // TODO: Add scope field"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v2ComponentRequest": {
      "type": "object",
      "example": {
        "purl": "pkg:github/scanoss/engine@1.0.0"
      },
      "properties": {
        "purl": {
          "type": "string",
          "description": "Package URL identifying the component to analyze."
        },
        "requirement": {
          "type": "string",
          "description": "Version constraint for component resolution when PURL lacks explicit version."
        }
      },
      "description": "Represents a software component to be analyzed by SCANOSS API services.\nCombines a Package URL for component identification with optional version constraints for resolution.",
      "required": [
        "purl"
      ]
    },
    "v2DependencyRequest": {
      "type": "object",
      "example": {
        "files": [
          {
            "file": "package.json",
            "purls": [
              {
                "purl": "pkg:npm/express",
                "requirement": "^4.18.0"
              }
            ]
          }
        ]
      },
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2DependencyRequestFiles"
          },
          "title": "List of dependency files"
        },
        "depth": {
          "type": "integer",
          "format": "int32",
          "title": "Depth to go when searching dependencies"
        }
      },
      "title": "Dependency request data (JSON payload)"
    },
    "v2DependencyRequestFiles": {
      "type": "object",
      "properties": {
        "file": {
          "type": "string",
          "title": "dependency filename"
        },
        "purls": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2DependencyRequestPurls"
          },
          "title": "List of purls"
        }
      },
      "title": "List of dependency files"
    },
    "v2DependencyRequestPurls": {
      "type": "object",
      "properties": {
        "purl": {
          "type": "string",
          "title": "Purl name"
        },
        "requirement": {
          "type": "string",
          "description": "string scope = 3;  // TODO what did we want scope for?",
          "title": "requirement - optional"
        }
      },
      "title": "List of Purls/requirements"
    },
    "v2DependencyResponse": {
      "type": "object",
      "example": {
        "files": [
          {
            "file": "package.json",
            "id": "dependency",
            "status": "pending",
            "dependencies": [
              {
                "component": "express",
                "purl": "pkg:npm/express",
                "version": "4.18.2",
                "licenses": [
                  {
                    "name": "MIT",
                    "spdx_id": "MIT",
                    "is_spdx_approved": true,
                    "url": "https://opensource.org/licenses/MIT"
                  }
                ],
                "url": "https://www.npmjs.com/package/express",
                "comment": ""
              }
            ]
          }
        ],
        "status": {
          "status": "SUCCESS",
          "message": "Dependencies successfully retrieved"
        }
      },
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2DependencyResponseFiles"
          },
          "title": "Dependency response details"
        },
        "status": {
          "$ref": "#/definitions/v2StatusResponse",
          "title": "Response status (required?)"
        }
      },
      "title": "Dependency response data (JSON payload)"
    },
    "v2DependencyResponseFiles": {
      "type": "object",
      "properties": {
        "file": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DependencyResponseDependencies"
          }
        }
      }
    },
    "v2EchoRequest": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "description": "Echo Message Request."
    },
    "v2EchoResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "description": "Echo Message Response."
    },
    "v2StatusCode": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "SUCCESS",
        "SUCCEEDED_WITH_WARNINGS",
        "WARNING",
        "FAILED"
      ],
      "default": "UNSPECIFIED",
      "description": "Status code Enum."
    },
    "v2StatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v2StatusCode",
          "title": "response status"
        },
        "message": {
          "type": "string",
          "title": "Status message"
        }
      },
      "description": "Detailed response details."
    },
    "v2TransitiveDependencyRequest": {
      "type": "object",
      "example": {
        "depth": 3,
        "limit": 50,
        "components": [
          {
            "purl": "pkg:npm/express",
            "requirement": "4.18.0"
          },
          {
            "purl": "pkg:npm/lodash",
            "requirement": "4.17.0"
          }
        ]
      },
      "properties": {
        "depth": {
          "type": "integer",
          "format": "int32",
          "title": "Depth (number of layers) to go when searching for dependencies - optional"
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "TODO: Add scope filters:\nrepeated string scope_include\nrepeated string scope_exclude\nUsing a list of strings allows filtering by multiple scopes simultaneously\n(e.g., include both \"dev\" and \"test\" dependencies in a single request)",
          "title": "Limit the number of components reported back - optional"
        },
        "components": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ComponentRequest"
          },
          "title": "List of Purls from the same ecosystem\nSupported ecosystems: \"composer\", \"crates\", \"maven\", \"npm\", \"gem\""
        }
      },
      "title": "Transitive dependency request data (JSON payload)"
    },
    "v2TransitiveDependencyResponse": {
      "type": "object",
      "example": {
        "dependencies": [
          {
            "purl": "pkg:npm/express@4.18.2",
            "version": "4.18.2"
          },
          {
            "purl": "pkg:npm/body-parser@1.20.1",
            "version": "1.20.1"
          },
          {
            "purl": "pkg:npm/cookie@0.5.0",
            "version": "0.5.0"
          }
        ],
        "status": {
          "status": "SUCCESS",
          "message": "Transitive dependencies successfully retrieved"
        }
      },
      "properties": {
        "dependencies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/TransitiveDependencyResponseComponent"
          },
          "title": "Dependency response details"
        },
        "status": {
          "$ref": "#/definitions/v2StatusResponse",
          "title": "Response status"
        }
      },
      "title": "Transitive dependency response data (JSON payload)"
    }
  }
}
