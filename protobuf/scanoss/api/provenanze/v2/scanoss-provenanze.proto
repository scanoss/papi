/*
 SPDX-License-Identifier: MIT

   Copyright (c) 2023, SCANOSS

   Permission is hereby granted, free of charge, to any person obtaining a copy
   of this software and associated documentation files (the "Software"), to deal
   in the Software without restriction, including without limitation the rights
   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   copies of the Software, and to permit persons to whom the Software is
   furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included in
   all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   THE SOFTWARE.
 */

/***
 * Provenanze definition details
***/
syntax = "proto3";
package scanoss.api.provenanze.v2;

option go_package = "github.com/scanoss/papi/api/provenanzev2;provenanzev2";

import "scanoss/api/common/v2/scanoss-common.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "SCANOSS Provenanze Service";
    version: "2.0";
    contact: {
      name: "scanoss-provenanze";
      url: "https://github.com/scanoss/provenanze";
      email: "support@scanoss.com";
    };
  };
  schemes: HTTP;
  consumes: "application/json";
  produces: "application/json";
  responses: {
    key: "404";
    value: {
      description: "Returned when the resource does not exist.";
      schema: {
        json_schema: {
          type: STRING;
        }
      }
    }
  }
};

/*
 * Expose all of the SCANOSS Provenanze RPCs here
 */
service Provenanze {
  // Standard echo
  rpc Echo(scanoss.api.common.v2.EchoRequest) returns(scanoss.api.common.v2.EchoResponse) {
    option (google.api.http) = {
      post: "/api/v2/provenanze/echo"
      body: "*"
    };
  };
  // Get Provenanze countrues associated with a list of PURLs
  rpc GetComponentProvenanze(scanoss.api.common.v2.PurlRequest) returns(ProvenanzeResponse) {
    option (google.api.http) = {
      post: "/api/v2/provenanze/countries"
      body: "*"
    };
  };
  rpc GetFileProvenanze(scanoss.api.common.v2.FileRequest) returns(ProvenanzeResponse) {
    option (google.api.http) = {
      post: "/api/v2/provenanze/countriesmd5"
      body: "*"
    };
  };
}


 message Country {
    string country = 1;
    string source = 2;
  }
/*
 * Component level Provenanze Response data (JSON payload)
 */
message ProvenanzeResponse {
 
  message Purls {
    string purl = 1;
    string version = 2;
    repeated Country Countries = 3;
  }
  // Cryptography details
  repeated Purls purls = 1;
  // Response status
  scanoss.api.common.v2.StatusResponse status = 2;
}


/*
 * File level Provenanze Response data (JSON payload)
 */
 message FileProvenanzeResponse {

  message File {
    string file = 1;
    repeated Country Countries = 2;
  }
  // Cryptography details
  repeated File files = 1;
  // Response status
  scanoss.api.common.v2.StatusResponse status = 2;
}