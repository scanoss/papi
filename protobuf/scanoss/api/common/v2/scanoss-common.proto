/*
 SPDX-License-Identifier: MIT

   Copyright (c) 2021-2025, SCANOSS

   Permission is hereby granted, free of charge, to any person obtaining a copy
   of this software and associated documentation files (the "Software"), to deal
   in the Software without restriction, including without limitation the rights
   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   copies of the Software, and to permit persons to whom the Software is
   furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included in
   all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   THE SOFTWARE.
 */

/***
 * Common definition details
***/
syntax = "proto3";
package scanoss.api.common.v2;

option go_package = "github.com/scanoss/papi/api/commonv2;commonv2";

import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/field_behavior.proto";

/*
 * Status code Enum
 */
enum StatusCode {
  UNSPECIFIED = 0;
  SUCCESS = 1;
  SUCCEEDED_WITH_WARNINGS = 2;
  WARNING = 3;
  FAILED = 4;
}

/*
 * Detailed response details
 */
message StatusResponse {
  // response status
  StatusCode status = 1;
  // Status message
  string message = 2;
};

/*
 * Echo Message Request
 */
message EchoRequest {
  string message = 1;
}

/*
 * Echo Message Response
 */
message EchoResponse {
  string message = 1;
}

/*
 * Represents a software component to be analyzed by SCANOSS API services.
 * Combines a Package URL for component identification with optional version constraints for resolution.
 */
message ComponentRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: "{\"purl\":\"pkg:github/scanoss/engine@1.0.0\"}";

  };

  // Package URL identifying the component to analyze.
  string purl = 1 [(google.api.field_behavior) = REQUIRED];
  // Version constraint for component resolution when PURL lacks explicit version.
  string requirement = 2;
}

/*
 * Represents a list of software component to be analyzed by SCANOSS API services.
 * Allows analysis of multiple software components in a single API call, improving performance over individual requests.
 */
message ComponentBatchRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: "{\"components\":[{\"purl\":\"pkg:github/scanoss/engine@1.0.0\"},{\"purl\":\"pkg:github/scanoss/scanoss.py@v1.30.0\"}]}";

  };

  // Array of component requests to analyze
  repeated ComponentRequest components = 1 [(google.api.field_behavior) = REQUIRED];
}


/*
 * Purl request data (JSON payload)
 * WARNING: PurlRequest is deprecated, use ComponentBatchRequest instead.
 */
message PurlRequest {
  /*
    TODO: Refactor this API
      - Remove nested Purls message and replace with top-level Purl message type.
      - Update field definition below to: repeated Purl purls = 1;
   */
  message Purls {
    // @description: purl to be requested
    string purl = 1;
    string requirement = 2;
  }
  // JSON request purls
  repeated Purls purls = 1;
}

/*
 * Purl request data (JSON payload)
 * Used by transitive dependencies request
 */
message Purl {
  // @description: purl to be requested
  string purl = 1;
  string requirement = 2;
}
