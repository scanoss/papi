{
  "swagger": "2.0",
  "info": {
    "title": "SCANOSS Scanning Service",
    "version": "2.0",
    "contact": {
      "name": "scanoss-scanning",
      "url": "https://github.com/scanoss/scanning",
      "email": "support@scanoss.com"
    }
  },
  "tags": [
    {
      "name": "Scanning"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v2/scanning/echo": {
      "post": {
        "summary": "Standard echo",
        "operationId": "Scanning_Echo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2EchoResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Echo Message Request.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2EchoRequest"
            }
          }
        ],
        "tags": [
          "Scanning"
        ]
      }
    },
    "/api/v2/scanning/hfh/scan": {
      "post": {
        "summary": "Scan the given folder request looking for matches",
        "operationId": "Scanning_FolderHashScan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2HFHResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2HFHRequest"
            }
          }
        ],
        "tags": [
          "Scanning"
        ]
      }
    }
  },
  "definitions": {
    "HFHRequestChildren": {
      "type": "object",
      "properties": {
        "pathId": {
          "type": "string",
          "title": "Folder path (can be actual or obfuscated)"
        },
        "simHashNames": {
          "type": "string",
          "description": "Proximity hash calculated from this nodes filenames (and their children)."
        },
        "simHashContent": {
          "type": "string",
          "description": "Proximity hash calculated from this nodes file contents (and their children)."
        },
        "children": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/HFHRequestChildren"
          },
          "title": "Sub-folders inside this child"
        },
        "simHashDirNames": {
          "type": "string",
          "description": "Proximity hash calculated from this nodes directory names (and their children)."
        },
        "langExtensions": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          },
          "title": "Language extensions count (dictionary) - language name -\u003e count"
        }
      },
      "title": "Child node from the folder structure"
    },
    "HFHResponseComponent": {
      "type": "object",
      "properties": {
        "purl": {
          "type": "string",
          "title": "Component PURL"
        },
        "name": {
          "type": "string",
          "title": "Component name"
        },
        "vendor": {
          "type": "string",
          "title": "Component vendor"
        },
        "versions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/HFHResponseVersion"
          },
          "title": "Component match version (could be multiple)"
        },
        "rank": {
          "type": "integer",
          "format": "int32",
          "description": "Component Ranking from 1 to 9. 1 means official well known repository, 9 might be garbage."
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "title": "This is the order of the best match to worst match (1 is the best match)"
        }
      },
      "title": "Matched component details"
    },
    "HFHResponseResult": {
      "type": "object",
      "properties": {
        "pathId": {
          "type": "string",
          "title": "Folder path (can be actual or obfuscated)"
        },
        "components": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/HFHResponseComponent"
          },
          "title": "List of matching components"
        }
      },
      "title": "Result item, link a path with a list of components"
    },
    "HFHResponseVersion": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "title": "Component version"
        },
        "score": {
          "type": "number",
          "format": "float",
          "title": "Component score (0-1)"
        }
      },
      "title": "Component version details"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v2EchoRequest": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "description": "Echo Message Request."
    },
    "v2EchoResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "description": "Echo Message Response."
    },
    "v2HFHRequest": {
      "type": "object",
      "properties": {
        "root": {
          "$ref": "#/definitions/HFHRequestChildren",
          "title": "Folder root node to be scanned"
        },
        "rankThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "Get results with rank below this threshold (e.g i only want to see results from rank 5 and below). Lower rank means better quality."
        },
        "category": {
          "type": "string",
          "title": "Filter results by category (e.g i only want to see results from github projects, npm, etc)"
        },
        "queryLimit": {
          "type": "integer",
          "format": "int32",
          "title": "Maximum number of results to query"
        }
      },
      "title": "High precision Folder Hashing scan request"
    },
    "v2HFHResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/HFHResponseResult"
          },
          "title": "List of folders containing unique components"
        },
        "status": {
          "$ref": "#/definitions/v2StatusResponse"
        }
      },
      "title": "High precision Folder Hashing scan response"
    },
    "v2StatusCode": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "SUCCESS",
        "SUCCEEDED_WITH_WARNINGS",
        "WARNING",
        "FAILED"
      ],
      "default": "UNSPECIFIED",
      "description": "Status code Enum."
    },
    "v2StatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v2StatusCode",
          "title": "response status"
        },
        "message": {
          "type": "string",
          "title": "Status message"
        }
      },
      "description": "Detailed response details."
    }
  }
}
