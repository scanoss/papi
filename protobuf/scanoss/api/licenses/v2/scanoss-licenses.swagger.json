{
  "swagger": "2.0",
  "info": {
    "title": "SCANOSS License Service",
    "description": "License service provides license intelligence for software components.",
    "version": "2.0",
    "contact": {
      "name": "scanoss-licenses",
      "url": "https://github.com/scanoss/licenses",
      "email": "support@scanoss.com"
    }
  },
  "tags": [
    {
      "name": "License"
    }
  ],
  "host": "api.scanoss.com",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v2/licenses/component": {
      "get": {
        "summary": "Get license information for a single software component.",
        "description": "Examines source code, license files, and package metadata to determine which licenses apply to the component.\nReturns license data in both individual SPDX license and SPDX expressions when determinable.\n\nSee: https://github.com/scanoss/papi/blob/main/protobuf/scanoss/api/licenses/v2/README.md?tab=readme-ov-file#getcomponentlicenses",
        "operationId": "License_GetComponentLicenses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ComponentLicenseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "purl",
            "description": "Package URL identifying the component to analyze.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "requirement",
            "description": "Version constraint for component resolution when PURL lacks explicit version.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "License"
        ]
      }
    },
    "/api/v2/licenses/components": {
      "post": {
        "summary": "Get license information for multiple software components in a single request.",
        "description": "Examines source code, license files, and package metadata to determine which licenses apply to each component.\nReturns license data in both individual SPDX license and SPDX expressions when determinable.\n\nSee https://github.com/scanoss/papi/blob/main/protobuf/scanoss/api/licenses/v2/README.md?tab=readme-ov-file#getcomponentslicenses",
        "operationId": "License_GetComponentsLicenses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ComponentsLicenseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Represents a list of software component to be analyzed by SCANOSS API services.\nAllows analysis of multiple software components in a single API call, improving performance over individual requests.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2ComponentsRequest"
            }
          }
        ],
        "tags": [
          "License"
        ]
      }
    },
    "/api/v2/licenses/details": {
      "post": {
        "summary": "Get detailed metadata for a specific license by SPDX identifier.",
        "description": "Provides comprehensive license information including SPDX registry data,\nOSADL compliance metadata, license type classification, and official references.",
        "operationId": "License_GetDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LicenseDetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LicenseRequest"
            }
          }
        ],
        "tags": [
          "License"
        ]
      }
    },
    "/api/v2/licenses/echo": {
      "post": {
        "summary": "Returns the same message that was sent, used for health checks and connectivity testing",
        "operationId": "License_Echo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2EchoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Echo Message Request.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2EchoRequest"
            }
          }
        ],
        "tags": [
          "License"
        ]
      }
    },
    "/api/v2/licenses/obligations": {
      "post": {
        "summary": "Get compliance obligations and usage requirements for a specific license.",
        "description": "Returns structured OSADL compliance data including use cases, obligations,\ncompatibility information, and patent hints for the specified license.",
        "operationId": "License_GetObligations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ObligationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LicenseRequest"
            }
          }
        ],
        "tags": [
          "License"
        ]
      }
    }
  },
  "definitions": {
    "OSADLOSADLUseCase": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "\"Binary delivery\", \"Network service\", \"Source code delivery\""
        },
        "obligationText": {
          "type": "string",
          "title": "Human-readable obligation text"
        },
        "obligationJson": {
          "type": "string",
          "title": "Machine-readable structured obligations with Language/Action/Term breakdown"
        }
      },
      "description": "OSADL use case with structured obligations."
    },
    "SPDXSPDXCrossRef": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "Reference URL to the license text"
        },
        "isValid": {
          "type": "boolean",
          "description": "Indicates if SPDX consider this URL an authoritative/trustworthy source for the license."
        },
        "isLive": {
          "type": "boolean",
          "title": "Whether the URL is currently accessible via HTTP request"
        },
        "timestamp": {
          "type": "string",
          "title": "ISO 8601 timestamp when the validation was last performed"
        },
        "isWaybackLink": {
          "type": "boolean",
          "title": "Whether this URL points to an archived/Wayback Machine version"
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "title": "Display order/priority for multiple references (0-based)"
        },
        "match": {
          "type": "string",
          "title": "SPDX License Matching Guidelines compliance result:\n\"true\" - URL content matches SPDX template patterns (suitable for automated validation)\n\"false\" - URL content doesn't match patterns, often due to additional text beyond original license\n\"N/A\" - Matching validation not applicable\nSee: https://spdx.github.io/spdx-spec/v2.3/license-matching-guidelines-and-templates/"
        }
      },
      "description": "Cross-reference information for SPDX license URLs.\n\nContains metadata about license reference URLs and their compliance with SPDX \nLicense Matching Guidelines.\nSee: https://spdx.github.io/spdx-spec/v2.3/license-matching-guidelines-and-templates/"
    },
    "SPDXSPDXException": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "SPDX exception identifier, \"Classpath-exception-2.0\""
        },
        "fullName": {
          "type": "string",
          "title": "SPDX exception registry name, \"Classpath exception 2.0\""
        },
        "detailsUrl": {
          "type": "string",
          "title": "SPDX exception JSON URL"
        },
        "seeAlso": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Reference URLs"
        },
        "isDeprecated": {
          "type": "boolean",
          "title": "Whether this SPDX exception is deprecated by the SPDX License List"
        }
      },
      "description": "SPDX exception grant an exception to a license condition or additional\npermissions beyond those granted in a license.\nNOTE: this is not a stand-alone license."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v2ComponentLicenseInfo": {
      "type": "object",
      "properties": {
        "purl": {
          "type": "string",
          "description": "Package URL (PURL) uniquely identifying the component. See Common API Types documentation for format and resolution logic."
        },
        "requirement": {
          "type": "string",
          "title": "Echoes the client's version constraint from the request. See Common API Types documentation for resolution logic"
        },
        "version": {
          "type": "string",
          "title": "Specific version of the component that was analyzed"
        },
        "statement": {
          "type": "string",
          "title": "SPDX expression when licensing terms are clearly determinable from source analysis"
        },
        "licenses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2LicenseInfo"
          },
          "title": "Individual licenses identified in the component"
        }
      },
      "description": "License information for a specific component identified by PURL and version."
    },
    "v2ComponentLicenseResponse": {
      "type": "object",
      "example": {
        "component": {
          "purl": "pkg:github/scanoss/engine@1.0.0",
          "requirement": "",
          "version": "1.0.0",
          "statement": "GPL-2.0",
          "licenses": [
            {
              "id": "GPL-2.0",
              "full_name": "GNU General Public License v2.0 only"
            }
          ]
        },
        "status": {
          "status": "SUCCESS",
          "message": "Licenses Successfully retrieved"
        }
      },
      "properties": {
        "component": {
          "$ref": "#/definitions/v2ComponentLicenseInfo",
          "title": "License info for the component"
        },
        "status": {
          "$ref": "#/definitions/v2StatusResponse"
        }
      },
      "description": "Response message for GetComponentLicenses method.\n\nContains license information for a single software component including\ndiscovered licenses and SPDX expressions when determinable."
    },
    "v2ComponentRequest": {
      "type": "object",
      "example": {
        "purl": "pkg:github/scanoss/engine@1.0.0"
      },
      "properties": {
        "purl": {
          "type": "string",
          "description": "Package URL identifying the component to analyze."
        },
        "requirement": {
          "type": "string",
          "description": "Version constraint for component resolution when PURL lacks explicit version."
        }
      },
      "description": "Represents a software component to be analyzed by SCANOSS API services.\nCombines a Package URL for component identification with optional version constraints for resolution.",
      "required": [
        "purl"
      ]
    },
    "v2ComponentsLicenseResponse": {
      "type": "object",
      "example": {
        "components": [
          {
            "purl": "pkg:github/scanoss/engine@1.0.0",
            "requirement": "",
            "version": "1.0.0",
            "statement": "GPL-2.0",
            "licenses": [
              {
                "id": "GPL-2.0",
                "full_name": "GNU General Public License v2.0 only"
              }
            ]
          },
          {
            "purl": "pkg:github/scanoss/scanoss.py@v1.30.0",
            "requirement": "",
            "version": "v1.30.0",
            "statement": "MIT",
            "licenses": [
              {
                "id": "MIT",
                "full_name": "MIT License"
              }
            ]
          }
        ],
        "status": {
          "status": "SUCCESS",
          "message": "Licenses Successfully retrieved"
        }
      },
      "properties": {
        "components": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ComponentLicenseInfo"
          },
          "title": "License info for each component in the batch"
        },
        "status": {
          "$ref": "#/definitions/v2StatusResponse"
        }
      },
      "description": "Response message for GetComponentsLicenses method.\n\nContains license information for multiple software components processed\nin a single batch request. Each component is analyzed independently."
    },
    "v2ComponentsRequest": {
      "type": "object",
      "example": {
        "components": [
          {
            "purl": "pkg:github/scanoss/engine@1.0.0"
          },
          {
            "purl": "pkg:github/scanoss/scanoss.py@v1.30.0"
          }
        ]
      },
      "properties": {
        "components": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ComponentRequest"
          },
          "title": "Array of component requests to analyze"
        }
      },
      "description": "Represents a list of software component to be analyzed by SCANOSS API services.\nAllows analysis of multiple software components in a single API call, improving performance over individual requests.",
      "required": [
        "components"
      ]
    },
    "v2EchoRequest": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "description": "Echo Message Request."
    },
    "v2EchoResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "description": "Echo Message Response."
    },
    "v2LicenseDetails": {
      "type": "object",
      "properties": {
        "fullName": {
          "type": "string",
          "title": "Best human-readable license name (normalized when possible)\n- For SPDX licenses: Official SPDX name (e.g., \"MIT License\", \"GNU General Public License v2.0 only\")\n- For non SPDX licenses: Best normalized name from SCANOSS database or original statement"
        },
        "type": {
          "$ref": "#/definitions/v2LicenseType",
          "title": "License type classification (PERMISSIVE, COPYLEFT, COMMERCIAL, etc.)"
        },
        "spdx": {
          "$ref": "#/definitions/v2SPDX",
          "title": "SPDX registry metadata - always present, SPDX.id always populated, other fields empty if not license not in SPDX License list"
        },
        "osadl": {
          "$ref": "#/definitions/v2OSADL",
          "description": "For future use, specific SCANOSS metadata\nSCANOSS scanoss = 5;",
          "title": "OSADL compliance metadata - optional, contains compatibility and obligation information"
        }
      },
      "description": "Comprehensive license metadata container.\n\nProvides detailed information about a specific license including SPDX registry data,\nOSADL compliance metadata, license type classification, and official references."
    },
    "v2LicenseDetailsResponse": {
      "type": "object",
      "properties": {
        "license": {
          "$ref": "#/definitions/v2LicenseDetails",
          "title": "Full license details with all metadata"
        },
        "status": {
          "$ref": "#/definitions/v2StatusResponse"
        }
      },
      "description": "Response message for GetDetails method.\n\nProvides comprehensive license metadata including SPDX registry information,\nOSADL compliance data, license type classification, and official references."
    },
    "v2LicenseInfo": {
      "type": "object",
      "example": {
        "id": "GPL-2.0",
        "full_name": "GNU General Public License v2.0 only"
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "License identifier:\n - For SPDX registry licenses: Standard SPDX ID\n - For non-registry licenses: licenseRef-\u003ccustom_license_name\u003e"
        },
        "fullName": {
          "type": "string",
          "title": "Best human-readable license name (normalized when possible)\n- For SPDX licenses: Official SPDX name (e.g., \"MIT License\", \"GNU General Public License v2.0 only\")\n- For non SPDX licenses: Best normalized name from SCANOSS database or original statement"
        }
      },
      "description": "Individual license identification with SPDX ID and human-readable name."
    },
    "v2LicenseRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "SPDX identifier or licenseRef (e.g., \"MIT\", \"licenseRef-GitLab-Enterprise\")"
        }
      },
      "title": "GetDetails \u0026 GetObligations endpoint"
    },
    "v2LicenseType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "PERMISSIVE",
        "COPYLEFT",
        "COMMERCIAL",
        "PROPRIETARY",
        "PUBLIC_DOMAIN"
      ],
      "default": "UNKNOWN",
      "description": "Classification of license types based on their usage restrictions and obligations.\n\nUsed to categorize licenses by their general characteristics and compliance requirements.\n\n - UNKNOWN: License type could not be determined or classified\n - PERMISSIVE: Allows liberal use with minimal restrictions (e.g., MIT, BSD, Apache)\n - COPYLEFT: Requires derivative works to be distributed under the same license (e.g., GPL, LGPL)\n - COMMERCIAL: Requires payment or commercial licensing agreement\n - PROPRIETARY: Proprietary license with restricted usage rights\n - PUBLIC_DOMAIN: No copyright restrictions, dedicated to public domain (e.g., CC0, Unlicense)"
    },
    "v2OSADL": {
      "type": "object",
      "properties": {
        "copyleftClause": {
          "type": "boolean",
          "title": "Indicates whether the license contains copyleft obligations requiring derivative works to use the same license"
        },
        "patentHints": {
          "type": "boolean",
          "title": "Indicates whether the license contains patent-related clauses or considerations"
        },
        "compatibility": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of licenses that are compatible for combination with this license"
        },
        "dependingCompatibility": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of licenses that are compatible when depending on components with this license"
        },
        "incompatibility": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of licenses that are incompatible and cannot be combined with this license"
        },
        "useCases": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/OSADLOSADLUseCase"
          },
          "title": "Structured use cases with specific obligations for different distribution scenarios"
        }
      },
      "description": "OSADL compliance metadata providing license analysis and compatibility information."
    },
    "v2ObligationsResponse": {
      "type": "object",
      "properties": {
        "obligations": {
          "$ref": "#/definitions/v2OSADL",
          "title": "OSADL compliance data with use cases and obligations"
        },
        "status": {
          "$ref": "#/definitions/v2StatusResponse"
        }
      },
      "description": "Response message for GetObligations method.\n\nContains structured compliance obligations and usage requirements from\nOSADL database including use cases, compatibility, and patent information."
    },
    "v2SPDX": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "SPDX license identifier, \"GPL-2.0-only\", \"MIT\""
        },
        "fullName": {
          "type": "string",
          "title": "Official SPDX registry name (empty if license not in SPDX registry)"
        },
        "detailsUrl": {
          "type": "string",
          "title": "JSON API URL for full details"
        },
        "referenceUrl": {
          "type": "string",
          "title": "HTML page URL"
        },
        "isDeprecated": {
          "type": "boolean",
          "title": "Whether this license is deprecated by the SPDX License List"
        },
        "isFsfLibre": {
          "type": "boolean",
          "title": "Whether the Free Software Foundation considers this license libre/free"
        },
        "isOsiApproved": {
          "type": "boolean",
          "title": "Whether this license is approved by the Open Source Initiative (OSI)"
        },
        "seeAlso": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Related URLs"
        },
        "crossRefs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SPDXSPDXCrossRef"
          },
          "title": "Structured cross-references with validation info"
        },
        "exceptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SPDXSPDXException"
          },
          "title": "SPDX exceptions applied to this license (empty if none)"
        }
      },
      "description": "SPDX license registry metadata."
    },
    "v2StatusCode": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "SUCCESS",
        "SUCCEEDED_WITH_WARNINGS",
        "WARNING",
        "FAILED"
      ],
      "default": "UNSPECIFIED",
      "description": "Status code Enum."
    },
    "v2StatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v2StatusCode",
          "title": "response status"
        },
        "message": {
          "type": "string",
          "title": "Status message"
        }
      },
      "description": "Detailed response details."
    }
  }
}
