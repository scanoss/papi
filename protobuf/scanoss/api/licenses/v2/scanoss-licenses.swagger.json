{
  "swagger": "2.0",
  "info": {
    "title": "SCANOSS License Service",
    "version": "2.0",
    "contact": {
      "name": "scanoss-licenses",
      "url": "https://github.com/scanoss/licenses",
      "email": "support@scanoss.com"
    }
  },
  "tags": [
    {
      "name": "License"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v2/licenses/details": {
      "post": {
        "summary": "Get detailed metadata for a specific license",
        "operationId": "License_GetDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LicenseDetailsResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LicenseRequest"
            }
          }
        ],
        "tags": [
          "License"
        ]
      }
    },
    "/api/v2/licenses/echo": {
      "post": {
        "summary": "Standard echo",
        "operationId": "License_Echo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2EchoResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2EchoRequest"
            }
          }
        ],
        "tags": [
          "License"
        ]
      }
    },
    "/api/v2/licenses/obligations": {
      "post": {
        "summary": "Get obligations and compliance data for a license",
        "operationId": "License_GetObligations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ObligationsResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LicenseRequest"
            }
          }
        ],
        "tags": [
          "License"
        ]
      }
    },
    "/api/v2/licenses/purl": {
      "post": {
        "summary": "Get basic license info given a component batch request",
        "operationId": "License_GetLicenses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2BatchLicenseResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2ComponentBatchRequest"
            }
          }
        ],
        "tags": [
          "License"
        ]
      }
    }
  },
  "definitions": {
    "licensesv2Type": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "PERMISSIVE",
        "COPYLEFT",
        "COMMERCIAL",
        "PROPRIETARY",
        "PUBLIC_DOMAIN"
      ],
      "default": "UNKNOWN"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v2BatchLicenseResponse": {
      "type": "object",
      "properties": {
        "components": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ComponentLicenseInfo"
          },
          "title": "License info for each component in the batch"
        },
        "status": {
          "$ref": "#/definitions/v2StatusResponse"
        }
      },
      "title": "GetLicenses endpoint batch response"
    },
    "v2ComponentBatchRequest": {
      "type": "object",
      "properties": {
        "components": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ComponentRequest"
          },
          "title": "JSON request purls"
        }
      },
      "title": "Component batch request data (JSON payload)"
    },
    "v2ComponentLicenseInfo": {
      "type": "object",
      "properties": {
        "purl": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "statement": {
          "type": "string",
          "title": "Raw license statement as declared in source code"
        },
        "licenses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2LicenseInfo"
          },
          "title": "Individual licenses parsed from the statement with basic info"
        }
      },
      "title": "Individual component license information"
    },
    "v2ComponentRequest": {
      "type": "object",
      "properties": {
        "purl": {
          "type": "string"
        },
        "requirement": {
          "type": "string"
        }
      },
      "title": "Component request data (JSON payload)"
    },
    "v2EchoRequest": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "title": "Echo Message Request"
    },
    "v2EchoResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "title": "Echo Message Response"
    },
    "v2LicenseDetails": {
      "type": "object",
      "properties": {
        "fullName": {
          "type": "string",
          "title": "Best human-readable license name (normalized when possible)\n- For SPDX licenses: Official SPDX name (e.g., \"MIT License\", \"GNU General Public License v2.0 only\")\n- For non SPDX licenses: Best normalized name from SCANOSS database or original statement\nNote: May match SPDX.full_name for registry licenses, but serves different purpose (best effort vs official registry)"
        },
        "type": {
          "$ref": "#/definitions/licensesv2Type"
        },
        "spdx": {
          "$ref": "#/definitions/v2SPDX",
          "title": "Always present - SPDX.id always populated, other fields empty if not in SPDX License list"
        },
        "osadl": {
          "$ref": "#/definitions/v2OSADL",
          "title": "Optional - OSADL compliance metadata"
        }
      }
    },
    "v2LicenseDetailsResponse": {
      "type": "object",
      "properties": {
        "license": {
          "$ref": "#/definitions/v2LicenseDetails",
          "title": "Full license details with all metadata"
        },
        "status": {
          "$ref": "#/definitions/v2StatusResponse"
        }
      }
    },
    "v2LicenseInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Identifier for an individual license\n- For SPDX registry licenses: Standard SPDX ID (e.g., \"MIT\", \"GPL-2.0-only\")\n- For non-registry licenses: licenseRef format (e.g., \"licenseRef-GitLab-Enterprise\")"
        },
        "fullName": {
          "type": "string",
          "title": "Best human-readable license name (normalized when possible)\n- For SPDX licenses: Official SPDX name (e.g., \"MIT License\", \"GNU General Public License v2.0 only\")\n- For non SPDX licenses: Best normalized name from SCANOSS database or original statement"
        }
      }
    },
    "v2LicenseRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "SPDX identifier or licenseRef (e.g., \"MIT\", \"licenseRef-GitLab-Enterprise\")"
        }
      },
      "title": "GetDetails \u0026 GetObligations endpoint"
    },
    "v2OSADL": {
      "type": "object",
      "properties": {
        "copyleftClause": {
          "type": "boolean"
        },
        "patentHints": {
          "type": "boolean"
        },
        "compatibility": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dependingCompatibility": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "incompatibility": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "useCases": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2OSADL_UseCase"
          },
          "title": "TODO: Mine data"
        }
      },
      "description": "OSADL compliance metadata providing license analysis and compatibility information."
    },
    "v2OSADL_UseCase": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "\"Binary delivery\", \"Network service\", \"Source code delivery\""
        },
        "obligationText": {
          "type": "string",
          "title": "Human-readable obligation text"
        },
        "obligationJson": {
          "type": "string",
          "title": "Machine-readable structured obligations with Language/Action/Term breakdown"
        }
      },
      "description": "OSADL use case with structured obligations."
    },
    "v2ObligationsResponse": {
      "type": "object",
      "properties": {
        "obligations": {
          "$ref": "#/definitions/v2OSADL",
          "title": "OSADL compliance data with use cases and obligations"
        },
        "status": {
          "$ref": "#/definitions/v2StatusResponse"
        }
      }
    },
    "v2SPDX": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "\"GPL-2.0-only\", \"MIT\" - the SPDX license identifier"
        },
        "fullName": {
          "type": "string",
          "title": "Official SPDX registry name (empty if license not in SPDX registry)"
        },
        "detailsUrl": {
          "type": "string",
          "title": "JSON API URL for full details"
        },
        "referenceUrl": {
          "type": "string",
          "title": "HTML page URL"
        },
        "isDeprecated": {
          "type": "boolean",
          "title": "License is deprecated"
        },
        "isFsfLibre": {
          "type": "boolean",
          "title": "FSF considers it libre/free"
        },
        "isOsiApproved": {
          "type": "boolean"
        },
        "seeAlso": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Related URLs"
        },
        "crossRefs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2SPDX_CrossRef"
          },
          "title": "Structured cross-references with validation info"
        },
        "exceptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2SPDX_Exception"
          },
          "title": "SPDX exceptions applied to this license (empty if none)"
        }
      },
      "description": "SPDX license registry metadata."
    },
    "v2SPDX_CrossRef": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "isValid": {
          "type": "boolean"
        },
        "isLive": {
          "type": "boolean"
        },
        "timestamp": {
          "type": "string"
        },
        "isWaybackLink": {
          "type": "boolean"
        },
        "order": {
          "type": "integer",
          "format": "int32"
        },
        "match": {
          "type": "string"
        }
      },
      "description": "SPDX cross-reference with validation metadata."
    },
    "v2SPDX_Exception": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "\"Classpath-exception-2.0\""
        },
        "fullName": {
          "type": "string",
          "title": "\"Classpath exception 2.0\""
        },
        "detailsUrl": {
          "type": "string",
          "title": "SPDX exception JSON URL"
        },
        "seeAlso": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Reference URLs"
        },
        "isDeprecated": {
          "type": "boolean",
          "title": "Exception is deprecated"
        }
      },
      "description": "SPDX license exception details."
    },
    "v2StatusCode": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "SUCCESS",
        "SUCCEEDED_WITH_WARNINGS",
        "WARNING",
        "FAILED"
      ],
      "default": "UNSPECIFIED",
      "title": "Status code Enum"
    },
    "v2StatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v2StatusCode",
          "title": "response status"
        },
        "message": {
          "type": "string",
          "title": "Status message"
        }
      },
      "title": "Detailed response details"
    }
  }
}
